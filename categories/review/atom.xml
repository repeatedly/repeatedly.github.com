<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Review | Go ahead!]]></title>
  <link href="http://repeatedly.github.com/categories/review/atom.xml" rel="self"/>
  <link href="http://repeatedly.github.com/"/>
  <updated>2013-10-20T00:57:05+09:00</updated>
  <id>http://repeatedly.github.com/</id>
  <author>
    <name><![CDATA[Masahiro Nakagawa]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Stormをはじめよう]]></title>
    <link href="http://repeatedly.github.com/ja/2013/03/getting-started-with-storm/"/>
    <updated>2013-03-30T10:54:00+09:00</updated>
    <id>http://repeatedly.github.com/ja/2013/03/getting-started-with-storm</id>
    <content type="html"><![CDATA[<p>O'Reillyの方から<a href="http://www.oreilly.co.jp/books/9784873116013/">Stormをはじめよう</a>を献本して頂いて読んだのでレビュー！</p>

<h2>感想</h2>

<p>最近増えてきている100ページくらいの本なので，さっくり読めました．</p>

<p>簡単にまとめると "<strong>英語は読みたくないので情報が古くてもStormの概要を日本語で読みたい</strong>" という方向けの本．</p>

<p>大きな理由は以下:</p>

<ul>
<li>Stormの対象バージョンが0.7.1と古い．俺でもTridentというのが0.8から入っているのを知っているので，その辺の目玉機能は書かれていない</li>
<li>多分原著の方も少し書き方が雑．なんの説明もなく実装のクラス名を使って説明している所とかあるので「？」となる所がある

<ul>
<li>サンプルコードも少し雑で，使ってない変数があったり説明と実装があってなかったりもたまにある</li>
</ul>
</li>
<li>翻訳が少し微妙．Cursorが"カーサー"だったり，原著の方の構成の不味さもあるのか，日本語的に理解しにくい文がちょくちょく混じっている (監訳はいない？)</li>
</ul>


<p>メッセージングの信頼性に関しては，Storm本家のWikiの方が詳しく書かれていたりするので，本当に「Stormってどういう構成でどういう感じに機能追加するんだろう？ユースケースとかは？」みたいなのを日本語で読みたい場合には，とっかかりにもなるし，これで十分な感じ．</p>

<p>英語が読める人は，本家のWikiとか漁った方が情報も新しく結構細かに書かれているため，そちらの方が正確かもしれない．</p>

<h2>正誤表</h2>

<p>読んでて気になった所はgistにまとめておきました</p>

<p><a href="https://gist.github.com/repeatedly/5274873">Stormをはじめようのerrata</a></p>

<h2>Stormについてのてきとうな所感</h2>

<ul>
<li><p>NimbusはImpalaのstatestoreみたいな感じで，最初はいるけど落ちても致命的ではない</p></li>
<li><p>Tupleは基本単体で送られて，それぞれにトポロジーのack tracker(Acker)がついてトラッキングされる</p>

<ul>
<li>tupleが増えるとAckerも増え，数が増えると結構重そうに見えるけど，そこんところどうなのか</li>
<li>再送は基本Spoutが判断．まぁこれは分からなくもない</li>
</ul>
</li>
<li><p>0.8からのTridentはBatchをガリガリ使っていると聞いてるけど，通常の利用だとあまりない？ 1 Tupleでトポロジー内forwardしまくるのは結構パフォーマンス的に厳しそう</p></li>
<li><p>トランザクションはSpout / Boltの両方が頑張る．この辺は今時のストリーミング処理系と同じ．コアで担保は難しい</p></li>
<li><p>各ワーカーのコアのメソッドはシングルスレッドで呼ばれるようなので，この辺で重い処理すると多分詰まる．at-least-onceっぽいので，多分これが連鎖するとデータ重複する．</p></li>
<li><p>multilangはHadoop Streamingと同じ</p></li>
<li><p>ZooKeeperに依存しているので，そこがまた面倒くさそう</p></li>
</ul>


<p>とりあえずこんな感じ．0.8や0.9でもっと改善されているかもしれないので，その辺は必要があれば追う．</p>
]]></content>
  </entry>
  
</feed>
