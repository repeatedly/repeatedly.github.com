<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Go ahead!]]></title>
  <link href="http://repeatedly.github.com/atom.xml" rel="self"/>
  <link href="http://repeatedly.github.com/"/>
  <updated>2014-07-17T18:30:21+09:00</updated>
  <id>http://repeatedly.github.com/</id>
  <author>
    <name><![CDATA[Masahiro Nakagawa]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Prestoソースコードリーディング #4]]></title>
    <link href="http://repeatedly.github.com/ja/2014/07/presto-scr-4/"/>
    <updated>2014-07-17T17:53:00+09:00</updated>
    <id>http://repeatedly.github.com/ja/2014/07/presto-scr-4</id>
    <content type="html"><![CDATA[<p><a href="http://atnd.org/events/53545">Presto ソースコードリーディング #4</a></p>

<p>いつものようにLINEでやりました！</p>

<p>@frsyukiが帰国する前に，という流れで開催決定・募集が1週間前というタイトなスケジュールでしたが，
無茶ぶりにつきあってくれた@ueshinさんに感謝．</p>

<h2>当日の内容</h2>

<p><a href="http://togetter.com/li/694128">togetterのまとめ</a>を見れば，なんとなく大まかな流れは把握できるはず…！</p>

<p>ueshinさんが第二回のashigeruさんの論理計画実行の後を継いで，
物理計画実行周りの話をしてくれました(<a href="https://gist.github.com/ueshin/5e38cfe915ce15f756b1">資料のgist</a>)．
バイトコード生成しての高速化の話とか，Presto以外でも有用な話が出てました．</p>

<p>frsyukiが現在のPrestoの開発体制の話，Treasure Dataでハックしている所の紹介，
CREATE VIEWなどの実装がなぜこうなっているのか(これはfrsyuki案が通ったらしい)，
今後Prestoチームがやろうとしていることなど含め，その場で色々と議論する感じになりました．</p>

<h2>まとめ</h2>

<p>少人数でソースコードレベルで興味のある人が集まっているのもあり，いつも通り濃い感じでした！
partitionedの話とか，現在の実行モデルにおけるオペレータの実装の話とか，
この辺を話すイベントはあんまりないんじゃないかなと思います．</p>

<p>次第5回をいつやるかは決まってませんが，いずれやる予定です．</p>

<p>またソースコードリーディングとは別に，Prestoのユースケースや，
プロダクションで動かしている人の運用の話などを共有する，
Presto meetupみたいなもう少し緩めのイベントもやる予定です．</p>

<p>お楽しみに :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Release fluent-plugin-multi-format-parser]]></title>
    <link href="http://repeatedly.github.com/ja/2014/07/release-fluent-plugin-multi-format-parser/"/>
    <updated>2014-07-13T21:00:00+09:00</updated>
    <id>http://repeatedly.github.com/ja/2014/07/release-fluent-plugin-multi-format-parser</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/repeatedly/fluent-plugin-multi-format-parser">fluent-plugin-multi-format-parser</a></p>

<p>一つのログファイルの中に複数のフォーマットがある時に利用可能なパーサプラグイン書きました．</p>

<h2>使い方</h2>

<p>fluent-gemでインストール．</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ fluent-gem install fluent-plugin-multi-format-parser</span></code></pre></td></tr></table></div></figure>


<p>インストールすると，TextParserを利用している<code>in_tail</code>や<code>in_udp</code>などで<code>multi_format</code>が使えるようになります．
そこで<code>&lt;pattern&gt;</code>を複数並べてください．<code>&lt;pattern&gt;</code>内の各設定は，利用するパーサにそのまま渡されます．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='aconf'><span class='line'><span class="nt">&lt;source&gt;</span>
</span><span class='line'>  <span class="nb">type</span> udp
</span><span class='line'>  <span class="nb">tag</span> logs.multi
</span><span class='line'>
</span><span class='line'>  <span class="nb">format</span> multi_format
</span><span class='line'>  <span class="nt">&lt;pattern&gt;</span>
</span><span class='line'>    <span class="nb">format</span> apache
</span><span class='line'>  <span class="nt">&lt;/pattern&gt;</span>
</span><span class='line'>  <span class="nt">&lt;pattern&gt;</span>
</span><span class='line'>    <span class="nb">format</span> json
</span><span class='line'>  <span class="nt">&lt;/pattern&gt;</span>
</span><span class='line'>  <span class="nt">&lt;pattern&gt;</span>
</span><span class='line'>    <span class="nb">format</span> <span class="k">none</span>
</span><span class='line'>  <span class="nt">&lt;/pattern&gt;</span>
</span><span class='line'><span class="nt">&lt;/match&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>&lt;pattern&gt;</code>を上から順番に試し，パース出来たらその結果を返します．上の設定例だと，最初に<code>apache</code>，次に<code>json</code>，最後に<code>none</code>になります．
たとえば，以下のようなログ群を<code>in_udp</code>に流すと</p>

<pre><code>192.168.0.1 - - [28/Feb/2013:12:00:00 +0900] "GET / HTTP/1.1" 200 777
{"k1":"v", "k2":123456}
foobar
</code></pre>

<p>以下のように処理されます．</p>

<pre><code>2013-02-28 12:00:00 +0900 test.**: {"host":"192.168.0.1","user":"-","method":"GET","path":"/","code":"200","size":"777"}
2014-07-13 20:56:55 +0900 test.**: {"k":"v","k1":123456}
2014-07-13 20:56:55 +0900 test.**: {"message":"foobar"}
</code></pre>

<h2>まとめ</h2>

<p>ログファイルの中に複数のフォーマットが混じるのは望ましいことではないのですが，どうしてもそういう状況が起きるときには，使ってみてください．</p>

<p>あと，実装はかなり単純なので，パーサプラグインのサンプルにでもしてもらえればと思います．</p>

<p>何か要望があれば<a href="https://github.com/repeatedly/fluent-plugin-multi-format-parser">issue/pull request</a>に投げてもらえれば対応します．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Release fluent-plugin-netflow]]></title>
    <link href="http://repeatedly.github.com/ja/2014/07/release-fluent-plugin-netflow/"/>
    <updated>2014-07-11T21:35:00+09:00</updated>
    <id>http://repeatedly.github.com/ja/2014/07/release-fluent-plugin-netflow</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/repeatedly/fluent-plugin-netflow">fluent-plugin-netflow</a></p>

<p>CiscoのNetflowプロトコルを受け取るFluentdプラグインを書きました．
公開してみたら結構反応が良くて，地味にユーザが多そうですね…</p>

<h2>経緯</h2>

<p>Fluentdを調べていたユーザから「ログ収集基盤をFluentdベースにしたいんだけど，Netflowをパースするプラグインないの？」と言われたので，
さくっと作ってみました．<br />
「さくっと」と言ってもコアのパーサー部分はそのユーザが使っていたLogstashからポーティングしたやつなので，それなりにパース出来るはずです．
Pull Requestのおかげもあり，対応templateも少し増えてます．</p>

<h2>使い方</h2>

<p>fluent-gemでインストールするだけです．</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ fluent-gem install fluent-plugin-netflow</span></code></pre></td></tr></table></div></figure>


<p>その後，以下のように設定します．typeとtagは必須です．他のやつは適宜環境に合わせて設定してください．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='aconf'><span class='line'><span class="nt">&lt;source&gt;</span>
</span><span class='line'>  <span class="nb">type</span> netflow
</span><span class='line'>  <span class="nb">tag</span> netflow.event
</span><span class='line'>
</span><span class='line'>  <span class="c"># optional parameters</span>
</span><span class='line'>  <span class="nb">bind</span> <span class="m">127.0.0.1</span>
</span><span class='line'>  <span class="nb">port</span> <span class="m">9555</span>
</span><span class='line'>
</span><span class='line'>  <span class="c"># optional parser parameters</span>
</span><span class='line'>  <span class="err">cache_</span><span class="nb">ttl</span> <span class="m">6000</span>
</span><span class='line'>  <span class="nb">versions</span> [5, <span class="m">9</span>]
</span><span class='line'>  <span class="nb">definitions</span> <span class="sx">/path/to/your_definitions.yml</span>
</span><span class='line'><span class="nt">&lt;/match&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>今現在はin_syslogの影響もあってデフォルトポートが5140のままなのですが，0.1.0を出す時に変更する予定です．</p>

<h2>TODO</h2>

<ul>
<li>俺自身がNetflow関係のやつを持っていないので，使っている人，誰かメンテナになってください！実環境でのテストが出来ませんｗ</li>
<li>Fluentd v0.10.52が出たら，FluentdのSocketUtilベースで書き直して，0.1.0を出す</li>
</ul>


<p>他，何か要望があれば<a href="https://github.com/repeatedly/fluent-plugin-netflow">issue/pull request</a>をしてもらえれば対応します．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fluentd v1 and Roadmapというプレゼンをしてきた]]></title>
    <link href="http://repeatedly.github.com/ja/2014/05/fluentd-v1-and-roadmap/"/>
    <updated>2014-05-15T18:55:00+09:00</updated>
    <id>http://repeatedly.github.com/ja/2014/05/fluentd-v1-and-roadmap</id>
    <content type="html"><![CDATA[<p><a href="http://eventdots.jp/event/49560">Fluentd Meetup 新しい応用事例とv1に関する発表</a></p>

<p>フリークアウトさんのオフィスでFluentd Meetupがあり，Fluentdのv1について話してきました．</p>

<iframe src="http://www.slideshare.net/slideshow/embed_code/34652297?rel=0" width="427" height="356" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px 1px 0; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe>


<p> <div style="margin-bottom:5px"> <strong> <a href="https://www.slideshare.net/treasure-data/fluentd-v1-and-roadmap" title="Fluentd v1 and Roadmap" target="_blank">Fluentd v1 and Roadmap</a> </strong> from <strong><a href="http://www.slideshare.net/treasure-data" target="_blank">Treasure Data, Inc.</a></strong> </div></p>

<p>今回の発表は，今までのv11やv1に関してのまとめ的な発表になっています．<br />
以下のリンク集を見れば，発表内容の大抵はカバー出来ると思います．
また，他の方もまとめ記事とかを書かれているので，そちらも参照してください．</p>

<ul>
<li><a href="http://repeatedly.github.io/ja/2014/03/about-fluentd-v11/">そろそろFluentd v11についてひとこと言っておくか</a></li>
<li><a href="https://github.com/fluent/fluentd/issues/251">Plan for v1 release #251</a></li>
<li><a href="https://github.com/fluent/fluentd/issues/317">Support JRuby #317</a></li>
<li><a href="https://github.com/fluent/fluentd/tree/windows">FluentdのWindowsブランチ</a></li>
<li><a href="https://github.com/fluent/fluentd/pull/293">Add &#8211;use-v1-config option to enable new configuration format #293</a></li>
<li><a href="https://github.com/repeatedly/omnibus-td-agent">td-agent2のパッケージリポジトリ</a></li>
</ul>


<p>俺の方から言えることは，Fluentd v0.10.46以降を使っている方は，
積極的に<code>--use-v1-config</code>オプションを使ってくださいということです．<br />
既存のフォーマットとの違いは<a href="http://docs.fluentd.org/articles/config-file#v1-format">ドキュメントを参照</a>してください．</p>

<p>td-agent2は今ビルド中で，今週末あたりにリリースしたいと思ってます(パッケージングツールをアップデートしたら色々と壊れて無駄に時間が…)．
それ以降はv1にリソースを割けるはずなので，フィルタやラベルなどを実装していく予定です．ご期待ください！</p>

<p>また，Treasure DataはFluentdの開発者含め<a href="http://www.treasuredata.com/jp/about/careers.php">人材を募集している</a>ので，
興味のある方はぜひぜひコンタクトをしてもらえればと思います！</p>

<p>P.S.</p>

<p>フリークアウトさんのオフィスにある，バスケのゴールにダンク出来なかったのが悔しいので，足腰鍛え直す．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MultiOS testing for Fluentd repository on Travis CI]]></title>
    <link href="http://repeatedly.github.com/2014/05/multios-testing-for-fluentd-repository-on-travis-ci/"/>
    <updated>2014-05-15T14:22:00+09:00</updated>
    <id>http://repeatedly.github.com/2014/05/multios-testing-for-fluentd-repository-on-travis-ci</id>
    <content type="html"><![CDATA[<p>Recently, Travis CI announces &#8220;Multi-OS feature&#8221; on their blog.</p>

<p><a href="http://blog.travis-ci.com/2014-05-13-multi-os-feature-available/">Multi-OS Feature Available</a></p>

<p>If this feature is enabled, our project can be tested on both Linux and Mac OS X. <br />
Multi OS feature has been enabled for <a href="https://github.com/fluent/fluentd/commit/e4bb4f61e91c70a95690d19b07414b485e7a3542">Fluentd repository</a>. See following build:</p>

<p><a href="https://travis-ci.org/fluent/fluentd/builds/25147077">fluent/fluentd on Travis CI</a></p>

<p>This is very useful for checking commit and PR. Thanks Travis CI and Facebook team!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The status of Cool.io]]></title>
    <link href="http://repeatedly.github.com/2014/05/the-status-of-coolio/"/>
    <updated>2014-05-06T02:55:00+09:00</updated>
    <id>http://repeatedly.github.com/2014/05/the-status-of-coolio</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/tarcieri/cool.io">Cool.io</a> was revived after I became a maintainer. This article describes the current stauts and future work of Cool.io.</p>

<p>Cool.io is a core of <a href="http://fluentd.org/">Fluentd</a> so I am focusing Fluentd related features.</p>

<h2>Windows support</h2>

<p>Cool.io is the one of blocker for Fluentd Windows support. Since version 1.2, Cool.io works on Windows and I release mingw based cross-compiling gem for Windows environment.</p>

<p>You can now use Cool.io via <code>gem install cool.io</code> on Windows and we started to implement <a href="https://github.com/fluent/fluentd/tree/windows">Windows support of Fluentd</a>.</p>

<h3>The limitation on Windows</h3>

<p>Cool.io uses <code>select</code> on Windows, not IOCP. In this result, the performance isn&#8217;t better than other environments.
This limitation is of little concern in Fluentd forward use-case.</p>

<h2>JRuby support</h2>

<p>Fluentd works on CRuby and Rubinius. If support JRuby, Fluentd will work on almost popular Ruby environemnts.</p>

<p>Since May 2014, <a href="https://github.com/taichi">@taichi</a> started to implement <a href="https://github.com/tarcieri/cool.io/issues/32">JRuby support</a>. @taichi has experience with Java and evented IO frameworks so he is a good person for this task ;)</p>

<h2>Remove Ruby 1.8 support</h2>

<p>Ruby 1.8 is dead language so Cool.io removes 1.8 support since version 1.2.</p>

<h2>Remove HttpClient</h2>

<p>AFAIK, there is no HttpClient users including Fluentd. This class depends on Ragel to parse HTTP. It increases the maintenance cost and hard to support on cross platform.</p>

<p>So HttpClient will not be maintained in the future.</p>

<h2>Conclusion</h2>

<p>Cool.io isn&#8217;t dead and Cool.io is still improved. We are now working on more better environment support and fixing the bugs.</p>

<p>If you have a bug of Cool.io, then please file it on github :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[札幌 2014 冬]]></title>
    <link href="http://repeatedly.github.com/ja/2014/03/sapporo-2014-winter/"/>
    <updated>2014-03-22T15:41:00+09:00</updated>
    <id>http://repeatedly.github.com/ja/2014/03/sapporo-2014-winter</id>
    <content type="html"><![CDATA[<p>二つのイベントに参加するため，札幌に行ってました．</p>

<h2><a href="http://www.hicta.or.jp/index_oshirase_detail.php?id=624">技術セミナー２０１４～ビッグデータ時代のＩＴシーズ～</a></h2>

<p>北海道IT推進協会さまのイベントで，ビッグデータとかデータ解析周りについてクラウド要素も含めて，ビジネス的な話をしてきました．
参加者に経営者の方も多い感じだったので，なるべく技術的な用語は使わないよう心がけて講演．</p>

<p>いつもとは違う雰囲気の中での講演で，こういうのも勉強になって良いかなと．</p>

<h2><a href="http://connpass.com/event/5222/">AWS勉強会 in 北海道札幌！</a></h2>

<p>メインは上のイベントだったのだけど，それだけで北海道を去るのも勿体ないなぁと他のイベントを探していたら</p>

<blockquote class="twitter-tweet" data-conversation="none" lang="en"><p>話す側でお願いしますw <a href="https://twitter.com/repeatedly">@repeatedly</a> あれ，よく見たらクラスメソッドさんの勉強会が次の日にある．これに参加しようかな？ &gt; &quot;AWS勉強会 in 北海道札幌！（懇親会有）&quot; <a href="http://t.co/doSVv4FPb8">http://t.co/doSVv4FPb8</a></p>&mdash; よこたさとし (@sato_shi) <a href="https://twitter.com/sato_shi/statuses/441211073375371264">March 5, 2014</a></blockquote>


<script async src="http://repeatedly.github.com//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>とのreplyをもらったので，飛び入りでFluentdについて発表してきました．</p>

<iframe src="http://www.slideshare.net/slideshow/embed_code/32700881?rel=0" width="427" height="356" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px 1px 0; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe>


<p> <div style="margin-bottom:5px"> <strong> <a href="https://www.slideshare.net/treasure-data/fluentd-and-aws-at-classmethod" title="Fluentd and AWS at classmethod" target="_blank">Fluentd and AWS at classmethod</a> </strong> from <strong><a href="http://www.slideshare.net/treasure-data" target="_blank">Treasure Data, Inc.</a></strong> </div></p>

<p>Fluentd利用者も少なかったので，基本的な動作原理や，Fluentdが有用なユースケース，
AWSなイベントなのでAWS関係のプラグインの紹介などなど，一通りやった．</p>

<p>懇親会で色々と話を聞いたけど，まだ地方？だとそもそもデータを集めてなかったり，
データ解析に関しての需要が出てきておらず，Fluentdなどを使う段階になってないとのこと．
そもそもIT化出来てない会社とかもあるのでまずはそこから，とも<br />
東京とかだとこの辺の動きが活発だけど，中央以外ではまた違った形で活動しないと，
「便利なソフトウェアがある！」とかで広めることは出来ないなぁと実感．<br /></p>

<p>色々と考えないと行けないことが増えた感じで，この辺の話を聞けたのは良かった．</p>

<h2>まとめ</h2>

<p><img src="http://repeatedly.github.com/images/kinki_sushi.jpg" title="&#34;Kinki no Sushi&#34;" alt="&#34;Kinki no Sushi&#34;"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[そろそろFluentd v11についてひとこと言っておくか]]></title>
    <link href="http://repeatedly.github.com/ja/2014/03/about-fluentd-v11/"/>
    <updated>2014-03-05T19:40:00+09:00</updated>
    <id>http://repeatedly.github.com/ja/2014/03/about-fluentd-v11</id>
    <content type="html"><![CDATA[<p>リリースは永遠にされません！</p>

<p>日本では色々なところでv11の噂がまことしやかに囁かれていますが，
俺がメインメンテナである限りv11がリリースされることはないので，諦めてv0.10.xを使ってください！</p>

<p>以下まじめな話になります．</p>

<h2>v11が生まれた背景と現状</h2>

<p>v11が生まれたのは1年以上前です．背景には，v10と呼ばれる今のバージョンがプロトタイプを兼ねたリリースであり，
「利用者のフィードバックを取り込んで，ダメな所をガッツリ書き換えて互換性を壊してメジャーバージョンアップや！」という流れがありました．</p>

<p>しかし，v10は十分に柔軟でかつパフォーマンスも発揮しており，コミッタ陣はそれほどモチベーションがあったわけではありません．
また，プラグインによって解決出来た問題も多く，v11が生まれた時ほどユーザから「v11が欲しい！」という要望は聞かれなくなりました．</p>

<p>当たり前ですが，ユーザからの声がなければ「あれ，じゃあこの機能あんまり必要ないんじゃね？」ということになって削られるのはよくあることで，
v11もそんな感じで開発リソースはあまり割かれなくなって行きました．<br />
もともと空いた時間に@frsyuki，@tagomoris，@sonotsの人達がたまにコミットしていたくらいなので，直近では機能追加のコミットはほぼありません．</p>

<h2>Fluentdのユーザ拡大</h2>

<p>v11で互換性を壊しても大丈夫だろう，とコミッタ陣が思っていたものの一つに，当時Fluentdのプラグインの大半をコミッタの関係者が書いていた，
というのがあります．<br />
そのため，互換性を壊しても必要そうなプラグインの書き換えはすぐに終わるし，
「えいや！」と同時にバージョン上げれば被害は少ないだろうという感じです．</p>

<p>しかし，v10は思っていたよりも早くユーザが増え，今ではさきがけとなったWeb/アドテク業界のみならず，大小問わず様々な企業，
IoTな分野など，世界的にも使われるようになってきました．<br />
また，それにともないプラグイン数も200を越え，当初の目論見が難しくなっているのが現状です．</p>

<h2>開発方針の変更とv1案</h2>

<p>俺がFluentdのメインメンテナとなったのも関わってるんですが，「v11のリリースをどうするか？」という問題もハンドリングするようになりました．</br />
個人的には「v11の機能群は有用だけど，互換性を壊してリリースするほどのものではないなぁ」というのがv11を見た結論であり，
その辺やりとりしたのが以下のtogetter．</p>

<p><a href="http://togetter.com/li/620329">Fluentd v11 なんてなかったんだ</a></p>

<p>上のまとめにあるように，色々と話した結果，v11が持っているいくつかの機能をv10にマージし，
それらが終わったらv1としてリリースしようというのが，現在の開発の方向性です．<br />
段階的な変化になりますが，基本的には互換性が保たれるようにAPIを変えていくので，
既存ユーザはそのまま使えますし，バージョンアップにともなって徐々に有用な機能が使えるようになります．<br /></p>

<p>以下のissueで必要そうな機能リストと，進捗を管理してます．</p>

<p><a href="https://github.com/fluent/fluentd/issues/251">Plan for v1 release</a></p>

<p>v1というバージョンに関しては，今のFluentdのgemのバージョンがv0.10.xで，v0.11.xのことをv11と呼んでいて非常に紛らわしく，
新しく入ってくるユーザとかを考えるとそろそろまじめにバージョニングした方が良いだろうという考えです．<br />
v1だと安定版のイメージが強いですし，実際の所v0.10.xはv1でもおかしくない機能セットはすでに持っています．</p>

<h2>まとめ</h2>

<p>ということで，色々と今までの流れを書きましたが，皆さんFluentdを今後とも宜しくお願いします :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sensu雑感]]></title>
    <link href="http://repeatedly.github.com/ja/2014/02/the-thoughts-of-sensu/"/>
    <updated>2014-02-25T02:15:00+09:00</updated>
    <id>http://repeatedly.github.com/ja/2014/02/the-thoughts-of-sensu</id>
    <content type="html"><![CDATA[<p><a href="http://sensuapp.org/">Sensu</a></p>

<p>最近人気が出てきているようなので試して見た．
仕組みに関しては本家のドキュメントとかスライドとか見ると大体分かる．</p>

<p>雑感:</p>

<ul>
<li>server, client, api, dashboardに分かれているのは良い

<ul>
<li>実装はRubyでシンプルに書かれているように見える．多分弄るのは簡単</li>
</ul>
</li>
<li>RabbitMQとRedisが必要なのが試すのに結構つらい．chefとかpuppetを使うと良いらしい？

<ul>
<li>なんかテストモードがあるなら知りたい</li>
<li>ドキュメントは最低限はある．Advancedなことしようとするとgithubとか先人を頼ることになる</li>
</ul>
</li>
<li>設定がJSONなのはいいけど，ログすらJSONなのは徹底している</li>
<li>RabbitMQにはクライアントから登録しにいくようで，勝手に監視対象が増えるのは楽

<ul>
<li>マスターからのpullは限界があるので，この仕組みはモニタリングでは筋が良さそう</li>
</ul>
</li>
<li>プラグインは簡単に書けるが，現状失敗したら諦める前提らしい

<ul>
<li>まじめにハンドリングするなら，他のと連携する必要がある</li>
</ul>
</li>
<li>apiが気がつけば落ちてる時があって，原因がよく分からない</li>
<li>Fluentdのハンドラがコミュニティプラグインになかったので<a href="https://github.com/sensu/sensu-community-plugins/blob/master/handlers/notification/fluentd.rb">書いた</a></li>
</ul>


<p>「FluentdかSensuかどっちかに寄せたい」みたいな記事を誰かが書いてた記憶があるけど，何となく分かる．
Fluentdのプラグイン機構でSensuのクライアント周りの機構はよりロバストに実装出来る．<br />
コアの機能は結構シンプルなので，visualizationまで考えるとどうしたもんかという感じ．</p>

<p>Sensuはモニタリングのためのフレームワークなのでその辺の機能が中心に開発されてるけど，
そこの尖った部分が必要でなければ，RabbitMQとかと相まって結構大がかりにも見える．<br />
Nagiosとかは使ったことはないので，その辺と違ってどこまでメリットがあるのかはよく分かってないけど，
新しく作るシステムで一からモニタリングシステムを構築するなら十分有り．</p>

<p>仕組み的には柔軟でAPIとかで管理も楽に出来るようになってるので，今後ユーザは増えそうな気もしている．
しかしRabbitMQとRedisの二つ必要なのどうにかならないものか…</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Developer Summit 2014]]></title>
    <link href="http://repeatedly.github.com/ja/2014/02/developer-summit-2014/"/>
    <updated>2014-02-16T19:53:00+09:00</updated>
    <id>http://repeatedly.github.com/ja/2014/02/developer-summit-2014</id>
    <content type="html"><![CDATA[<p><a href="http://event.shoeisha.jp/devsumi/20140213/">Developers Summit 2014：開発者のためのITカンファレンス</a></p>

<p>セッション登壇も兼ねて，初めてデブサミに参加してきました．</p>

<h2>1日目</h2>

<p><a href="http://event.shoeisha.jp/devsumi/20140213/session/394/">OSSコミッタ大集合</a></p>

<p>これに登壇してました．登壇といっても，それぞれのプロジェクトの人がわいわいと自分の関わってるプロジェクトについて
交互に話すというもので，FluentdとD言語の時に壇上にあがってあれやこれや話しました．<br />
まぁFluentdに関しては登壇して何も喋らずに降りましたが…prz</p>

<p>セッションに関係ないですが登壇者控え室，和室でネットワークも電源もありで環境良すぎて超快適だった．雅叙園良いですね．</p>

<h2>2日目</h2>

<p>「Webの現在過去未来」のセッションなど気になるのがあったのですが，雪が降りすぎていたので参加しませんでした！</p>

<p>それとは別に，渋谷でRubyコミッタ3人との飲み会があり，鍋をつつきつつ色々と話をした．
その結果，Focuslightのメンテナが正式に決まり，FluentdにはLinux kernel &amp; Rubyコミッタであるkosakiさんがjoin．良い鍋でした．</p>

<blockquote class = "twitter-tweet" lang = "en"><p><a href = "https://twitter.com/sora_h">@sora_h</a> and <a href = "https://twitter.com/sonots">@sonots</a> are now focuslight committer! This is great step for growing <a href = "https://twitter.com/search?q = %23Fluentd&amp;src = hash">#Fluentd</a> visualization environment :)</p>&mdash; Mr. Fiber (@repeatedly) <a href = "https://twitter.com/repeatedly/statuses/434379434435436545">February 14, 2014</a></blockquote>


<script async src = "http://repeatedly.github.com//platform.twitter.com/widgets.js" charset = "utf-8"></script>




<blockquote class = "twitter-tweet" lang = "en"><p><a href = "https://twitter.com/kosaki55tea">@kosaki55tea</a> is now Fluentd committer! We can improve Fluentd more quickly :) <a href = "https://twitter.com/search?q = %23fluentd&amp;src = hash">#fluentd</a></p>&mdash; Mr. Fiber (@repeatedly) <a href = "https://twitter.com/repeatedly/statuses/434395924224167936">February 14, 2014</a></blockquote>


<script async src = "http://repeatedly.github.com//platform.twitter.com/widgets.js" charset = "utf-8"></script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Analyze event logs using Fluentd and Elasticsearch]]></title>
    <link href="http://repeatedly.github.com/2014/02/analyze-event-logs-using-fluentd-and-elasticsearch/"/>
    <updated>2014-02-12T17:25:00+09:00</updated>
    <id>http://repeatedly.github.com/2014/02/analyze-event-logs-using-fluentd-and-elasticsearch</id>
    <content type="html"><![CDATA[<p><a href="http://fluentd.org/">Fluentd</a> is a flexible and robust event log collector, but Fluentd doesn&#8217;t have own data-store and Web UI.
If you want to analyze the event logs collected by Fluentd, then you can use <a href="http://www.elasticsearch.org/">Elasticsearch</a> and <a href="http://www.elasticsearch.org/overview/kibana/">Kibana</a> :)</p>

<p>Elasticsearch is an easy to use Distributed Search Engine and Kibana is an awesome Web front-end for Elasticsearch.</p>

<h2>Setup</h2>

<p>I tested on Mac OS X.</p>

<h3>Pre requirements</h3>

<ul>
<li>Java for Elasticsearch</li>
</ul>


<p>Use Mac OS X&#8217;s Java.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>% java -version
</span><span class='line'>java version <span class="s2">&quot;1.6.0_51&quot;</span>
</span><span class='line'>Java<span class="o">(</span>TM<span class="o">)</span> SE Runtime Environment <span class="o">(</span>build 1.6.0_51-b11-457-11M4509<span class="o">)</span>
</span><span class='line'>Java HotSpot<span class="o">(</span>TM<span class="o">)</span> 64-Bit Server VM <span class="o">(</span>build 20.51-b01-457, mixed mode<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Ruby for Fluentd</li>
</ul>


<p>In this article, I use my rbenv&#8217;s Ruby and Fluentd gem directly.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>% ruby --version
</span><span class='line'>ruby 1.9.3p484 <span class="o">(</span>2013-11-22 revision 43786<span class="o">)</span> <span class="o">[</span>x86_64-darwin12.4.0<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Note that Fluentd doesn&#8217;t work on Ruby 1.8.</p>

<h4>Treasure Agent (td-agent)</h4>

<p>Treasure Agent, as known as <code>td-agent</code>, is a stable distribution which consists of Fluentd, popular plugins and own Ruby processor.
Many users use <code>td-agent</code> instead of Fluentd gem. See <a href="http://docs.fluentd.org/articles/faq#treasure-agenttd-agnt">this FAQ</a>.</p>

<h3>Elasticsearch</h3>

<p>Downlod and extract the latest package.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>% curl -O https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-0.90.11.tar.gz
</span><span class='line'>% tar zxvf elasticsearch-0.90.11.tar.gz
</span><span class='line'>% <span class="nb">cd </span>elasticsearch-0.90.11/
</span></code></pre></td></tr></table></div></figure>


<p>I use version v0.90.11 but <a href="http://www.elasticsearch.org/blog/0-90-11-1-0-0-rc2-released/">v1.0 will be released</a> soon!</p>

<p>Start Elasticsearch:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>% ./bin/elasticsearch -f
</span><span class='line'><span class="o">[</span>2014-02-12 17:51:32,645<span class="o">][</span>INFO <span class="o">][</span>node                     <span class="o">]</span> <span class="o">[</span>Powerhouse<span class="o">]</span> version<span class="o">[</span>0.90.11<span class="o">]</span>, pid<span class="o">[</span>79737<span class="o">]</span>, build<span class="o">[</span>11da1ba/2014-02-03T15:27:39Z<span class="o">]</span>
</span><span class='line'><span class="o">[</span>2014-02-12 17:51:32,646<span class="o">][</span>INFO <span class="o">][</span>node                     <span class="o">]</span> <span class="o">[</span>Powerhouse<span class="o">]</span> initializing ...
</span><span class='line'><span class="o">[</span>2014-02-12 17:51:32,651<span class="o">][</span>INFO <span class="o">][</span>plugins                  <span class="o">]</span> <span class="o">[</span>Powerhouse<span class="o">]</span> loaded <span class="o">[]</span>, sites <span class="o">[]</span>
</span><span class='line'><span class="o">[</span>2014-02-12 17:51:34,319<span class="o">][</span>INFO <span class="o">][</span>node                     <span class="o">]</span> <span class="o">[</span>Powerhouse<span class="o">]</span> initialized
</span><span class='line'><span class="o">[</span>2014-02-12 17:51:34,320<span class="o">][</span>INFO <span class="o">][</span>node                     <span class="o">]</span> <span class="o">[</span>Powerhouse<span class="o">]</span> starting ...
</span><span class='line'><span class="o">[</span>2014-02-12 17:51:34,395<span class="o">][</span>INFO <span class="o">][</span>transport                <span class="o">]</span> <span class="o">[</span>Powerhouse<span class="o">]</span> bound_address <span class="o">{</span> inet<span class="o">[</span>/0:0:0:0:0:0:0:0%0:9300<span class="o">]}</span>, publish_address <span class="o">{</span> inet<span class="o">[</span>/192.168.1.112:9300<span class="o">]}</span>
</span><span class='line'><span class="o">[</span>2014-02-12 17:51:37,448<span class="o">][</span>INFO <span class="o">][</span>cluster.service          <span class="o">]</span> <span class="o">[</span>Powerhouse<span class="o">]</span> new_master <span class="o">[</span>Powerhouse<span class="o">][</span>tL1IC8xHSCudeVsFt4JFsQ<span class="o">][</span>inet<span class="o">[</span>/192.168.1.112:9300<span class="o">]]</span>, reason: zen-disco-join <span class="o">(</span>elected_as_master<span class="o">)</span>
</span><span class='line'><span class="o">[</span>2014-02-12 17:51:37,481<span class="o">][</span>INFO <span class="o">][</span>discovery                <span class="o">]</span> <span class="o">[</span>Powerhouse<span class="o">]</span> elasticsearch/tL1IC8xHSCudeVsFt4JFsQ
</span><span class='line'><span class="o">[</span>2014-02-12 17:51:37,492<span class="o">][</span>INFO <span class="o">][</span>http                     <span class="o">]</span> <span class="o">[</span>Powerhouse<span class="o">]</span> bound_address <span class="o">{</span> inet<span class="o">[</span>/0:0:0:0:0:0:0:0%0:9200<span class="o">]}</span>, publish_address <span class="o">{</span> inet<span class="o">[</span>/192.168.1.112:9200<span class="o">]}</span>
</span><span class='line'><span class="o">[</span>2014-02-12 17:51:37,493<span class="o">][</span>INFO <span class="o">][</span>node                     <span class="o">]</span> <span class="o">[</span>Powerhouse<span class="o">]</span> started
</span><span class='line'><span class="o">[</span>2014-02-12 17:51:37,505<span class="o">][</span>INFO <span class="o">][</span>gateway                  <span class="o">]</span> <span class="o">[</span>Powerhouse<span class="o">]</span> recovered <span class="o">[</span>0<span class="o">]</span> indices into cluster_state
</span></code></pre></td></tr></table></div></figure>


<h3>Kibana</h3>

<p>Latest Kibana, called Kibana 3, consists of only HTML and JavaScript,
so setup is very easy:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>% curl -O https://download.elasticsearch.org/kibana/kibana/kibana-3.0.0milestone5.tar.gz
</span><span class='line'>% tar zxvf kibana-3.0.0milestone5.tar.gz
</span><span class='line'>% <span class="nb">cd </span>kibana-3.0.0milestone5/
</span></code></pre></td></tr></table></div></figure>


<p>Open index.html in the kibana directory:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>% open index.html
</span></code></pre></td></tr></table></div></figure>


<p>If you want to change Kibana configuration, please edit <code>config.js</code>, e.g. change elasticsearch URL.</p>

<h3>Fluentd</h3>

<p>Install Fluentd gem and <a href="https://github.com/uken/fluent-plugin-elasticsearch">Elasticsearch plugin</a>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>% gem install fluentd fluent-plugin-elasticsearch
</span></code></pre></td></tr></table></div></figure>


<p>Fluentd configuration is below:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='apache'><span class='line'><span class="c"># es.conf</span>
</span><span class='line'><span class="nt">&lt;source&gt;</span>
</span><span class='line'>  <span class="nb">type</span> forward
</span><span class='line'><span class="nt">&lt;/source&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;match</span> <span class="s">es.**</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nb">type</span> elasticsearch
</span><span class='line'>  <span class="err">logstash_</span><span class="nb">format</span> true
</span><span class='line'>  <span class="err">flush_</span><span class="nb">interval</span> <span class="m">5</span>s # <span class="m">5</span>s for testing. <span class="k">On</span> production environment, <span class="m">60</span>s or higher is better
</span><span class='line'><span class="nt">&lt;/match&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>fluent-plugin-elasticsearch provides <code>logstash_format</code> option.
It enables Kibana to analyze the event logs with day based indexes.</p>

<p>Start Fluentd:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>% fluentd -c es.conf
</span><span class='line'>2014-02-12 18:43:31 +0900 <span class="o">[</span>info<span class="o">]</span>: starting fluentd-0.10.43
</span><span class='line'>2014-02-12 18:43:31 +0900 <span class="o">[</span>info<span class="o">]</span>: reading config file <span class="nv">path</span> <span class="o">=</span> <span class="s2">&quot;es.conf&quot;</span>
</span><span class='line'>2014-02-12 18:43:32 +0900 <span class="o">[</span>info<span class="o">]</span>: gem <span class="s1">&#39;fluent-plugin-elasticsearch&#39;</span> version <span class="s1">&#39;0.2.0&#39;</span>
</span><span class='line'>2014-02-12 18:43:32 +0900 <span class="o">[</span>info<span class="o">]</span>: gem <span class="s1">&#39;fluentd&#39;</span> version <span class="s1">&#39;0.10.43&#39;</span>
</span><span class='line'>2014-02-12 18:43:32 +0900 <span class="o">[</span>info<span class="o">]</span>: using configuration file: &lt;ROOT&gt;
</span><span class='line'>  &lt;<span class="nb">source</span>&gt;
</span><span class='line'>    <span class="nb">type </span>forward
</span><span class='line'>  &lt;/source&gt;
</span><span class='line'>  &lt;match es.**&gt;
</span><span class='line'>    <span class="nb">type </span>elasticsearch
</span><span class='line'>    logstash_format <span class="nb">true</span>
</span><span class='line'><span class="nb">    </span>flush_interval 5s
</span><span class='line'>  &lt;/match&gt;
</span><span class='line'>&lt;/ROOT&gt;
</span><span class='line'>2014-02-12 18:43:32 +0900 <span class="o">[</span>info<span class="o">]</span>: adding <span class="nb">source type</span> <span class="o">=</span> <span class="s2">&quot;forward&quot;</span>
</span><span class='line'>2014-02-12 18:43:32 +0900 <span class="o">[</span>info<span class="o">]</span>: adding match <span class="nv">pattern</span> <span class="o">=</span> <span class="s2">&quot;es.**&quot;</span> <span class="nb">type</span> <span class="o">=</span> <span class="s2">&quot;elasticsearch&quot;</span>
</span><span class='line'>2014-02-12 18:43:32 +0900 <span class="o">[</span>info<span class="o">]</span>: listening fluent socket on 0.0.0.0:24224
</span></code></pre></td></tr></table></div></figure>


<h2>Analyze event logs</h2>

<p>Send some events to Fluentd. <code>fluent-cat</code> is an utility command to send json text to Fluentd&#8217;s <code>in_forward</code> plugin.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>% <span class="nb">echo</span> <span class="s1">&#39;{&quot;message&quot;:&quot;D&quot;}&#39;</span> | fluent-cat es.event <span class="c"># es.event is a tag. es.event matches es.** of &lt;match&gt;</span>
</span><span class='line'>% <span class="nb">echo</span> <span class="s1">&#39;{&quot;message&quot;:&quot;Ruby&quot;}&#39;</span> | fluent-cat es.event
</span><span class='line'>% <span class="nb">echo</span> <span class="s1">&#39;{&quot;message&quot;:&quot;Elasticsearch&quot;}&#39;</span> | fluent-cat es.event
</span><span class='line'>% <span class="nb">echo</span> <span class="s1">&#39;{&quot;message&quot;:&quot;msgpack&quot;}&#39;</span> | fluent-cat es.event
</span><span class='line'>% ...
</span></code></pre></td></tr></table></div></figure>


<p>After Fluentd flushed received events to Elasticsearch, you can analyze the event logs via Kibana!
Following image is one panel example:</p>

<p><img src="http://repeatedly.github.com/images/fluentd_kibana_elasticsearch.png" title="&#34;Fluentd, Elasticsearch and Kibana&#34;" alt="&#34;Fluentd, Elasticsearch and Kibana&#34;"></p>

<p>Kibana has some built-in panels, so you can create own dashboard easily. See <a href="http://demo.kibana.org/#/dashboard">Kibana demo</a></p>

<h2>Advanced tips</h2>

<p>If your service has a high traffic, then fluent-plugin-elasticsearch sometimes get stucked.
In this case, built-in <a href="http://docs.fluentd.org/articles/out_roundrobin">out_roundrobin plugin</a> is useful.
You can distribute a write request to elasticsearch nodes for load balancing.</p>

<p>Of course, putting Queue with multiple fluentd nodes is an another approach.</p>

<h2>Conclusion</h2>

<p>This article introduced Fluentd, Elasticsearch and Kibana combination to analyze the event logs.
These components are easy to setup and work fine, so you can try this framework soon!
I heard many companies have already tried / deployed this setup on production :)</p>

<p>Enjoy Fluentd and Elasticsearch!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[高トラフィックでのFluentdからElasticsearchへの書き込み問題への対策]]></title>
    <link href="http://repeatedly.github.com/ja/2014/02/measures-for-fluentd-with-elasticsearch-issue-on-high-traffic/"/>
    <updated>2014-02-11T18:39:00+09:00</updated>
    <id>http://repeatedly.github.com/ja/2014/02/measures-for-fluentd-with-elasticsearch-issue-on-high-traffic</id>
    <content type="html"><![CDATA[<p><a href="http://blog.kakipo.com/trouble-with-fluentd-and-elasticsearch/">Fluentd -> Elasticsearch 大量データ転送でトラブル</a></p>

<p>上の記事にあるように，Elasticsearchに大量のデータを一気に流し込むと色々と問題が起きます．
元々検索エンジンはスケールさせるのが難しく，よく当たる問題だと思います．</p>

<p>また，Fluentdとかだとガンガンログを流し込むことも多く，この辺で詰まる云々はたまに聞きます．</p>

<p><a href="http://elasticsearch.doorkeeper.jp/events/7491">第3回elasticsearch勉強会</a></p>

<p>で，Elasticsearch勉強会にFlorianという本家のエンジニアが来ていたので，
懇親会でこの辺どうすればいいのか聞いてみました．
実際Elasticsearchユーザの中でもちょくちょく問題になるらしく，
大きくわけて二つの方法(またはこの組み合わせ)で回避しているようです．</p>

<h2>書き込み先のノードを増やす</h2>

<p>1ノードへの書き込みで詰まるなら，もっとノードを増やせば良いというアプローチ．
今のfluent-plugin-elasticsearchにはラウンドロビンの機能はないんですが，
out_roundrobinとかと組み合わせてやれば，書き込みを複数台に散らせることは出来そうです．</p>

<h2>前段にキューを置く</h2>

<p>書き込みをするノードの前にキューを置いて，そこでバッファリングしておくという方法．
Fluentdの場合はバッファがキューになっているので，そこのフラッシュ間隔を長めに調整するとか，
キュー系のプラグインがいくつかあるので，それを間に挟むという感じになるのかなと．<br />
ただ，キューから値をポップする間隔が短いと結局詰まるので，この辺は少し工夫が必要そうです．</p>

<h2>まとめ</h2>

<p>Elasticsearchを真面目に運用したことがないので，どっちが現実的なのかよく分からないのが正直な所．
この辺は高トラフィック環境で使っている人の話を聞きたい所です．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Prestoソースコードリーディング #1]]></title>
    <link href="http://repeatedly.github.com/ja/2014/02/presto-scr-1/"/>
    <updated>2014-02-11T02:39:00+09:00</updated>
    <id>http://repeatedly.github.com/ja/2014/02/presto-scr-1</id>
    <content type="html"><![CDATA[<p><a href="http://atnd.org/events/47149">Presto ソースコードリーディング #1のATND</a></p>

<p>@tagomorisさんに場所を確保してもらって，LINEで第一回をやりました．</p>

<h2>開催の流れ</h2>

<p>CROSS辺りでPrestoのソースコードリーディングしたいね，という話が出て，
じゃあ俺が立てるので場所はLINE辺りで〜というその場のノリで決まった．</p>

<p>どうせ10人前後だろうということでかなり適当な感じで募集とかやってたんだけど，
応募人数が40人越え，当日参加が25人前後くらいだったので，予想より多かったかなという感じ．</p>

<h2>やったこと</h2>

<h3>全体の概要</h3>

<p>俺が軽めにやりました．Prestoの生まれた背景とか，依存している主要なライブラリ，
@frsyukiのスライドを拝借しての主要なクラス群の紹介，現在サポートしている型，
Slice使ってのデータの持ち方とか．後，最近の変更周りも少し紹介した</p>

<h3>HTTPレイヤー</h3>

<p>@tagomorisさんが担当で，クライアントが最初に到達するHTTP APIの <code>/v1/execution</code> や <code>/v1/statement</code> 周りの
処理の話．ソースコード的にはpresto-server．この辺もairliftにがっつり依存しているので，
パフォーマンスが気になるなど真面目に読みたい人はairliftも読みましょう．</p>

<h3>Execution</h3>

<p><a href="https://gist.github.com/oza/8912147">当日のgist</a></p>

<p>@oza_x86が担当．Coordinator内部でPlanやStageが出来るまでの流れ，
Workerで処理がどう進むかとかその辺の話．SplitsやそれぞれのRunnerの処理，
時間が掛かっているタスクの優先度下げるとか，工夫がいくつか見て取れた感じ．</p>

<h2>感想</h2>

<p>適当にやったわりにはそれなりに上手く進んで良かった．</p>

<p>第二回は，shot6さん，ashigeruさん，feeblefakieさん辺りが担当になってくれるかも？
という感じです．またソース読みつつあーだこーだ言い合いましょう．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[New log_level parameter]]></title>
    <link href="http://repeatedly.github.com/2014/02/new-log-level-parameter/"/>
    <updated>2014-02-05T05:22:00+09:00</updated>
    <id>http://repeatedly.github.com/2014/02/new-log-level-parameter</id>
    <content type="html"><![CDATA[<p>In this week, <a href="https://groups.google.com/forum/#!topic/fluentd/ukJ999bDwxY">Fluentd v0.10.43 has been released</a>.
Since this version, Fluentd introduced <code>log_level</code> parameter in Input / Output plugin.
It enables you can set different log level separated from global log level, e.g. <code>-v</code>, <code>-q</code> command line option.</p>

<p>This article shows &#8220;How to support <code>log_level</code> option in your plugin.&#8221;</p>

<h2>log_level option use cases</h2>

<h3>Disable in_tail warning</h3>

<p><code>in_tail</code> prints &#8220;pattern no match&#8221; warning when receives invalid log. It is useful information for almost users, but some users want to ignore this log for other important plugin warning.</p>

<p>In this case, you can set &#8220;log_level error&#8221; in <code>in_tail</code> configuration to disable &#8220;pattern no match&#8221;.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='aconf'><span class='line'><span class="nt">&lt;source&gt;</span>
</span><span class='line'>  <span class="nb">type</span> tail
</span><span class='line'>  ...
</span><span class='line'>  <span class="err">log_</span><span class="nb">level</span> <span class="k">error</span>
</span><span class='line'><span class="nt">&lt;/source&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Debugging</h3>

<p>Without <code>log_level</code>, we get many verbose logs using <code>-vv</code> command line option for one plugin. With <code>log_level</code>, you can set verbose configuration in only one plugin.</p>

<p>It is useful for debugging a plugin on acutual environment.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='aconf'><span class='line'><span class="nt">&lt;match</span> <span class="s">foo.**</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nb">type</span> unstable_plugin
</span><span class='line'>  ...
</span><span class='line'>  <span class="err">log_</span><span class="nb">level</span> trace
</span><span class='line'><span class="nt">&lt;/match&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Support log_level option in your plugin</h2>

<p>This section is for plugin developers.</p>

<p>First of all, Fluentd provides <code>$log</code> object as heretofore. So all plugin should work without changing on Fluentd v0.10.43 or later.</p>

<p>To suppot <code>log_level</code> is very easy. Replace <code>$log</code> with <code>log</code>. Following example is fluent-plugin-td&#8217;s diff:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'><span class="gd">-        $log.debug &quot;checking whether table &#39;#{key}&#39; exists on Treasure Data&quot;</span>
</span><span class='line'><span class="gi">+        log.debug &quot;checking whether table &#39;#{key}&#39; exists on Treasure Data&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Support older Fluentd versions</h3>

<p>After replaced <code>$log</code> with <code>log</code>, your plugin only works on Fluentd v0.10.43 or later. If you want to support older Fluentd versions, you can use following code in your plugin.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Fluent</span>
</span><span class='line'>  <span class="k">module</span> <span class="nn">FooPluginOutput</span> <span class="o">&lt;</span> <span class="no">Output</span>
</span><span class='line'>    <span class="c1"># Define `log` method for v0.10.42 or earlier</span>
</span><span class='line'>    <span class="k">unless</span> <span class="nb">method_defined?</span><span class="p">(</span><span class="ss">:log</span><span class="p">)</span>
</span><span class='line'>      <span class="n">define_method</span><span class="p">(</span><span class="ss">:log</span><span class="p">)</span> <span class="p">{</span> <span class="vg">$log</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>This code defines <code>log</code> method using <code>$log</code> when <code>log</code> method is not defined, so <code>log.error</code> is same as <code>$log.error</code> on older Fluentd.</p>

<p>fluent-plugin-td uses <a href="https://github.com/treasure-data/fluent-plugin-td/blob/1ae62326802ff998a38bbf040ddf0f4b236430ee/lib/fluent/plugin/out_tdlog.rb#L63">same approach</a>.</p>

<h2>Conculusion</h2>

<p><code>log_level</code> feature is very useful for Fluentd users. So if you have a time, please apply above changes and release new version plugin ;)</p>

<p>I will release new version of several plugins soon, S3, TD, Mongo and etc.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fluentd v11 at Tokuben]]></title>
    <link href="http://repeatedly.github.com/ja/2014/01/fluentd-v11-at-tokuben/"/>
    <updated>2014-01-26T02:39:00+09:00</updated>
    <id>http://repeatedly.github.com/ja/2014/01/fluentd-v11-at-tokuben</id>
    <content type="html"><![CDATA[<p><a href="http://atnd.org/events/46924">@特勉</a>というイベントに呼ばれたので，Fluentd v11について発表してきました．</p>

<iframe src="http://www.slideshare.net/slideshow/embed_code/30427877?rel=0" width="427" height="356" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px 1px 0; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe>


<p> <div style="margin-bottom:5px"> <strong> <a href="https://www.slideshare.net/treasure-data/fluentd-v11-at-tokuben" title="Fluentd v11 at tokuben" target="_blank">Fluentd v11 at tokuben</a> </strong> from <strong><a href="http://www.slideshare.net/treasure-data" target="_blank">Treasure Data, Inc.</a></strong> </div></p>

<p>今現在見えている機能群について一通りその背景とか，v10ではどうだったのかを絡めて話したので，上のスライドだけ見ても少しわかりにくいかもしれません．新しい機能の確認みたいな感じで眺めて貰えると．</p>

<p>特勉は今回はログ・データ解析がテーマでしたが，色々とテーマを変えて定期的にやるようなので，随時チェックしておくと良いと思います．</p>

<h2>その後…</h2>

<p><a href="http://togetter.com/li/620329">Fluentd v11 なんてなかったんだ</a></p>

<p>で，実はこの発表の次の日にTwitterで色々とやりとりがあり，上記のスライドに書かれているいくつかの機能は，v10に取り込まれる可能性が高いです．というか，v11そのものが消える可能性は普通にあります．</p>

<p>Fluentdそのものの改善では色々と考えていることはあるので，定期的にチェックして頂けると！後「v10でこういうところが使いにくい」とかあると，開発陣にフィードバックして貰えると助かります．</p>

<p>それでは！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CROSS 2014]]></title>
    <link href="http://repeatedly.github.com/ja/2014/01/cross-2014/"/>
    <updated>2014-01-18T23:57:00+09:00</updated>
    <id>http://repeatedly.github.com/ja/2014/01/cross-2014</id>
    <content type="html"><![CDATA[<p><a href="http://www.cross-party.com/">CROSS 2014</a>というイベントがあり，
<a href="http://www.cross-party.com/programs/distributed/">分散処理システムCROSS</a>というセッションのオーナーをやってきた．</p>

<h2>分散処理システムCROSS</h2>

<p>元々はログ収集で1セッションどうか，という話だった．が，
もうFluentdとかの話は色々な所でやってるし，ここで1時間やってもあんま成果はないだろうということでやめた．
そもそも日本でFluentd以外のログ収集プロジェクトで深い話を出来る人は希で，探すのがつらい．<br /></p>

<p>その変わり分散処理でも話が来ていたので，そっち側でどうにかやることにした．
分散処理だとなんかアルゴリズムとかそっち系の色が強くなりそうなので，とりあえずシステムをつけた．</p>

<h3>メンバ</h3>

<p>@oza_x86，@kuenishi，@shot6の三人にお願いした．時間を作って頂いてありがとうございました！
人選に関しては，少し前にTwitterでつぶやいたけど，以下のような感じで選んだ．</p>

<ul>
<li>分散処理システムを研究・開発している人</li>
<li>分散処理システムを開発・販売している人</li>
<li>分散処理システムを運用・サービスとして展開している人</li>
<li>分散処理システムの基盤を運用・提供している人</li>
</ul>


<p>事前打ち合わせの飲み会をやったけど，自己紹介して結局はなんか適当に喋りましょうということに．</p>

<h3>当日</h3>

<p>セッションが始まる前に，Hadoopやデータベースとかの入門的な話には多分ならないし，
他に面白そうなセッションがあるので〜，と誘導したにも関わらず，なんか結構人が入ってて驚いた！</p>

<p>色々と予防線は張ったものの，個人的には1時間それなりに話題は出せたんじゃないかと思ってます．
RaftやPaxosのような合意周り，Jepsenなどの分散処理システムの検証ツール，
Hadoopやその他のシステムの運用的な話，などなど．<br />
分散処理システムにおけるモデルの検証とかはやはり鬼門なので，今後色々と勉強したい所．</p>

<p>しかしモデレータというのは色々と疲れますね…</p>

<h2>その他のセッション</h2>

<h3>エンジニアの恋・愛・セックスのDevOps、ホントのところどうしたらいいの</h3>

<p>間に合わなくて参加出来なかったが，かなり反響があったセッションっぽい．
後で録画を見る．</p>

<h3>ぶつかり稽古</h3>

<p>セッションオーナーが登壇しないという酷いセッションだったｗ
けど内容そのものは，他社のレビュースタイルとか色々と知れて面白かった．</p>

<h3>アンカンファレンス</h3>

<p>Fluentd v11の話で登録したけど，雨の予報でも出社しないと噂の某モリスさんが一人でセッションの時間全部使い切り，
何も話せなかった．</p>

<h2>まとめ</h2>

<p>去年と違ってRed Bullガールがいないのが残念だった！来年は期待したい．</p>

<p>全体としては，Tシャツや雑誌の新刊も貰えたし，何人かリアルで合えたしで，色々とドタバタしたけど楽しかったので良し．皆さんお疲れ様でした！</p>

<p><img src="http://repeatedly.github.com/images/cross_2014.jpg" title="&#34;CROSS 2014 photo&#34;" alt="&#34;CROSS 2014 photo&#34;"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2013年の振り返り]]></title>
    <link href="http://repeatedly.github.com/ja/2014/01/2013-report/"/>
    <updated>2014-01-01T00:00:00+09:00</updated>
    <id>http://repeatedly.github.com/ja/2014/01/2013-report</id>
    <content type="html"><![CDATA[<p>転職したのもあり，色々と取り組むものが増えた年だった．</p>

<h2>D言語</h2>

<p>ちょっと割ける時間が減ったのもあり，全体的にD言語のコードを書く量は減ったかなと．
自分が欲しかった小さなライブラリはいくつか書いたりしたけど，
他にも書きたいのがあるので，2014年はガッツリ時間を取りたい．</p>

<ul>
<li><a href="http://repeatedly.github.io/2013/05/d-conference-2013/">D Conference 2013</a></li>
<li><a href="http://repeatedly.github.io/ja/2013/05/tdpl-japanese-edition/">プログラミング言語D</a></li>
</ul>


<p>その変わり，D言語の日本語書籍の出版に携わったりと，その他の活動はちょくちょくやった．</p>

<h2>Fluentd</h2>

<p>会社の関係もあってメインメンテナ的な立場になった．
Fluentdそのものの機能開発・メンテナンス含め，MLでの対応，イベントでの発表など色々やった．
2014年は，Windows対応にv11，それにtd-agentのRubyのバージョンアップなど，色々と課題は見えてたり．</p>

<p>MLに関しては，今かなり俺とkiyoto-sanの二人の独壇場な感じになっているので，
もう少し他の方の協力も欲しいと思ってたりします(その方が盛り上がっているように見えて良い)．<br />
特に日本は早期にヘビーユーザがついて色々と記事が増えたのもあり，他の国の人達より使いこなしているユーザが多いです．
なので英語の練習も兼ねて，簡単な質問にでも答えてくれる人が増えるといいな，と思ってます．<br />
日本の人はTwitterで質問し，海外の人はMLで質問する，というのがOSSやってて思う傾向ですね．</p>

<p>あと，Treasure Dataでは<a href="http://www.treasuredata.com/en/careers/careers-posting-004.php">Fluentdの開発者を募集している</a>ので，興味のある人は応募してみるといいかもしれません！</p>

<p>さらに，<a href="http://www.slideshare.net/treasure-data/treasure-agent-monitoring-service">年末発表したモニタリングシステム</a>のβユーザも随時募集しているので，
興味のある人は <a href="https://twitter.com/repeatedly">@repeatedly</a> にでも連絡して貰えればと思います．</p>

<h2>発表</h2>

<ul>
<li><a href="http://atnd.org/events/36713">Fluentd Casual Talks #2</a></li>
<li><a href="http://www.zusaar.com/event/501053">Fluentd meetup in Fukuoka</a></li>
<li><a href="http://repeatedly.github.io/ja/2013/03/the-architecture-of-data-analytics-paas-on-aws-jaws-days-2013-day2/">AWSを使ったデータ解析PaaSの裏側</a></li>
<li><a href="http://herokujp.doorkeeper.jp/events/3405">Heroku Meetup #8 TreasureData + Waza Report!!</a></li>
<li><a href="http://www.zusaar.com/event/873003">Monitoring Casual Talks #4</a></li>
<li><a href="http://repeatedly.github.io/ja/2013/07/july-tech-festa-2013/">July Tech Festa 2013</a></li>
<li><a href="http://atnd.org/events/44556">DevOps向けFluentd勉強会 at IPROS</a></li>
<li><a href="http://elasticsearch.doorkeeper.jp/events/6532">第2回elasticsearch勉強会</a></li>
<li><a href="http://www.ipsj.or.jp/event/s-seminar/2013/Exciting_Coding/">Exciting Coding! 2013</a></li>
</ul>


<p>とりあえず覚えている分だけリンクを貼ってみた．会社に関しての大きめな発表が増えたなと．</p>

<p>発表以外でも色々なイベントに参加して，FluentdやTDに関しての要望とかを聞いたりしていた．
これらで得たフィードバックは，ちゃんと吟味して取り込んでいきたい．</p>

<h2>まとめ</h2>

<p>ざっと振り返ってみた．
Fluentdに関しては，v10はもうコアでほぼやることがないので，次はv11が中心．
中心とは言っても，安定版として正式にリリースするのは当分先になる．多分．</p>

<p>2014年もOSS含め対外的な活動は積極的にしていきたいし，色々な人達と交流を増やして行きたい所．</p>

<p>今後も宜しくお願いします :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[D言語の現状]]></title>
    <link href="http://repeatedly.github.com/ja/2013/10/d-status-2013/"/>
    <updated>2013-10-20T00:00:00+09:00</updated>
    <id>http://repeatedly.github.com/ja/2013/10/d-status-2013</id>
    <content type="html"><![CDATA[<p><a href="http://japan.internet.com/webtech/20131018/5.html">「FacebookがプロダクションでD言語の利用を始めた」ことに関する記事</a>が少し話題になってます．で，これだけだとD言語が他の言語のようにプロダクションreadyと勘違いする方もいるかもしれないので，今の現状について書いておきます．</p>

<h2>この記事の一言まとめ</h2>

<p>手軽にプロダクションで使えるわけではありません！</p>

<p>詳細が知りたい方は以降をお読みください.</p>

<h2>今回の話</h2>

<p>FacebookのAndreiはTDPLという本を出した，D言語界隈でも主要なコミッタです．その一方，C++界隈でも有名な人物で，そういう人物がついにC++をやめてプロダクションでD言語を使った，というのが一つの大きなニュースです．</p>

<p>また，Facebookには<a href="http://qiita.com/yasei_no_otoko/items/17f672ec30393a2f928a">この記事を書いたBen</a>など，D言語を使えるエンジニアが他にもいます．</p>

<h2>プロダクションでつかえるのか？</h2>

<p>簡単に言うと，「品質的には問題が無い，が今広まってる言語ほど楽ではない」です．JavaやRuby/Python/PHPなどWebで広く使われているような言語のように，たくさんのライブラリがある訳ではありません．</p>

<p>Dubというパッケージマネージャが最近出てきましたが，<a href="http://code.dlang.org/">登録されているライブラリ</a>はまだ多くなく，なければ自分で書く必要があります．また，ライブラリにバグがあっても他の誰かが報告してくれるほどコミュニティも大きくないので，その辺も気をつける必要があります．まぁ大抵github/bitbucketなので，今時のエンジニアには楽だとは思いますが…</p>

<p>今プロダクションでD言語を使っている会社はFacebook以外にももちろんありますが(広告配信，ゲーム，社内システム，Webサーバなど)，そういう会社は大抵D言語でライブラリを書いてるような精通した人物が開発陣の中にいるのが現状です．まぁ，メジャーではない言語ではよくある光景だと思います．</p>

<p>プロダクション以外だと，研究とかでつかっている人は増えている感じがします．数値計算系，言語処理系，自然言語処理系，などなど書きやすさとパフォーマンスのバランスで選ばれているようです．</p>

<h3>互換性</h3>

<p>D言語を使ってない方からよく「D言語は互換性を維持しないからクソだ」という意見を聞くのですが，これにはいくつか理由があります．</p>

<h3>シェアがない</h3>

<p>当たり前ですが，シェアがない言語が律儀に互換性を維持してリリースすることのメリットはほぼありません．ライブラリも多くない言語では，互換性がなくなって困るライブラリはほとんどなく，ライブラリ開発者もほとんどが言語仕様の議論に参加しているので，基本問題は起きません．</p>

<h3>コミュニティの方向性</h3>

<p>上と関わりがありますが，今コミュニティとして，互換性よりも言語を良くしよう，という流れの方が強いです．</p>

<ul>
<li>この機能あった方がライブラリとかアプリが書きやすい</li>
<li>新しい機能でよりよいAPIが出来たのでこっちに移行</li>
<li>この機能は誰も使ってないから削除</li>
<li>この機能使うとこういう危険なコードになるので削除</li>
</ul>


<p>みたいな．これは今後プロダクションでの利用が増え，「互換性は保った方がいいんじゃないか？」という開発者が増えれば，流れは変わると思います．この辺はPythonやScalaなど，今時の言語と同じような感じかなと． <br />
今後に備えて，「bug fixリリースも考慮した開発フロー・バージョニングにした方がいいんじゃないか？」という提案はあがったりしてます．</p>

<h2>開発の流れ</h2>

<p>現状はD2しかメジャーバージョンがないんですが(D1のメンテナンスは終了)，これが開発版/安定版みたいになってます．昔と違って</p>

<ul>
<li>リグレッションがあったらリリースしない</li>
<li>リリース前にβ版を公開してフィードバックを得る</li>
<li>削除/変更するAPIは数ヶ月以上前から警告が出る</li>
</ul>


<p>などなど利用者がいきなり非互換にぶち当たるようなことが起きないように配慮はされてます．D言語はコンパイル時にシンボルやシグネチャをチェック出来る機構があり，ライブラリ開発者としても，多少の変更があってもそれで対応出来てます．<br />
なので，互換性に関しては少し寛容なのかもしれません．</p>

<p>「D2に入れるには大きすぎるかもしれない変更はD3で議論しよう」という流れになってるので，D2で今後パラダイムに関わるような大きな変更は起きないとは思います．</p>

<h2>まとめ</h2>

<p>記事で言及されている通り，言語，ライブラリ，開発環境，などなど昔に比べて成熟してきているのは確かですが，ご利用は計画的に，というが本当の所です．
ポジション的にはHaskellやGoに近い所にいて，メジャーとは言い切れないがパワーユーザが使っていて，コミュニティが大きくなりつつあるという感じです．Facebookはこれからも利用箇所を増やすでしょうし，海外では他の事例もちょくちょく出てきそうです．日本は…よく分からんですｗ</p>

<p>とはいえ，日本はアクティブなコミッタが3人いたりと，実はD言語をする環境としては恵まれていたりしてます．困ったら #dlang をつけてTwitterでつぶやくと，誰かが助けてくれるかもしれません．日本語情報については，<a href="https://twitter.com/repeatedly/status/391191903418322944">このtweet</a>を参考にしてください．</p>

<p>追記</p>

<p>@yasei_no_otoko さんが<a href="http://qiita.com/yasei_no_otoko/items/65b6a7cae7a6588dc7f6">エディタ・IDEの現状について書いてくれました</a>．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Librato Metrics introduction]]></title>
    <link href="http://repeatedly.github.com/ja/2013/09/librato-metrics-introduction/"/>
    <updated>2013-09-08T08:57:00+09:00</updated>
    <id>http://repeatedly.github.com/ja/2013/09/librato-metrics-introduction</id>
    <content type="html"><![CDATA[<p><a href="https://metrics.librato.com/">Librato Metrics</a>をうちではモニタリングに使ってるんですが，日本で全くと言って良いほど記事を見ないので，紹介記事を書いてみる．</p>

<h1>何が出来る？</h1>

<p>おおまかに分けて以下のようなことが出来る．</p>

<ul>
<li>メトリックスを作れる</li>
<li>メトリックスに対してアラートを設定出来る</li>
<li>ダッシュボードでメトリックスの一覧が見れる</li>
<li>JavaScript SDKを使って自分のサイトに埋め込むことが出来る</li>
<li>APIが提供されていて，いくつかの言語のクライアントがある</li>
</ul>


<p>以下それぞれ簡単な説明．</p>

<h2>メトリックス</h2>

<p>LibratoにはMetricというのがあり，これが最小の単位．Metricに監視したいメトリックスの値を入れていき，他のMetricと混ぜたりすることでモニタリングを行います．</p>

<p><img src="http://repeatedly.github.com/images/librato_metric_sample.png" title="&#34;Librato Metric sample&#34;" alt="&#34;Librato Metric sample&#34;"></p>

<p>上の例のように，一つのMetricに複数の軸の値を入れることが出来ます．これはソースと呼ばれていて，保存する時にsourceを指定すれば良いです．指定しなかったら&#8221;unassigned&#8221;みたいなsourceにまとめられます．<br />
後，右上にある時間を弄れば，そのレンジでグラフが表示されます．</p>

<p>左の欄に色々とグラフの設定内容があるので，必要であれば弄ります．&#8221;How should we aggregate your data over time?&#8221;の欄が少し大事で「どういう風にメトリックスを見るか」を指定できます(<a href="http://dev.librato.com/v1/post/metrics#gauge_specific">ここ</a>の説明参照)．</p>

<h3>Instrument</h3>

<p>Metricをまとめるのに，Instrumentというのがあります．ここで複数のMetricを重ねることで，関連のありそうなMetric同士を俯瞰出来るようになります．</p>

<p>単純なモニタリングだけだと，MetricとInstrumentが一対一になったりしてダッシュボードやJavaScript SDKでちょっと面倒だったりもします．</p>

<h2>アラート</h2>

<p><img src="http://repeatedly.github.com/images/librato_alert_sample.png" title="&#34;Librato Alert sample&#34;" alt="&#34;Librato Alert sample&#34;"></p>

<p>上の画像の左のカラムが例で，Metricの中でスレッショルドベースで指定出来ます．どこに飛ばすか設定出来るので，うちでは重要なメトリックスに関してはHipChatやPagerDutyなどに飛ばしてます．</p>

<p>複雑な条件設定や，Metricをまたいだアラートは出来ないので，そういうのが欲しい場合は自分達で頑張る必要があります．</p>

<h2>ダッシュボード</h2>

<p><img src="http://repeatedly.github.com/images/librato_dashboard_sample.png" title="&#34;Librato Dashboard Sample&#34;" alt="&#34;Librato Dashboard Sample&#34;"></p>

<p>これがダッシュボードの例です．実際はMetricじゃなくてInstrumentを並べてるんですが，こんな感じで表示出来ます．<br />
ダッシュボードはいくらでも作れるので，自分の見たい粒度で作って，必要なメトリックスを並べます．某社みたいに一つのダッシュボードに数千数万のメトリックスにならないよう気をつけましょう．</p>

<h2>API</h2>

<p><a href="http://dev.librato.com/v1/metrics">APIページ</a>にリストと説明が載ってます．いくつかの言語には<a href="https://github.com/librato">公式のクライアントライブラリ</a>があるので，使うと良いです．<br />
ただ，Ruby版とか試してもInstrument APIがなかったりと，まだまだサポートAPIにばらつきが多い印象．アプリケーションからガチで使うなら，自分でいくつか実装する必要があります．APIはREST + JSONなので，実装はそんなに難しくないです．</p>

<p><a href="http://dev.librato.com/v1/users">ユーザAPI</a>はまだβ機能なのか，使いたい場合はLibartoに連絡して，使えるようにしてもらう必要があるっぽいです．</p>

<h3>JavaScript SDK</h3>

<p><img src="http://repeatedly.github.com/images/librato_javascript_sdk_sample.png" title="&#34;Librato JavaScript SDK Sample&#34;" alt="&#34;Librato JavaScript SDK Sample&#34;"></p>

<p>こんな感じになります．好きなページに貼り付けることが出来るし，グラフは自動で更新されます．
どういうコードになるかは，<a href="http://blog.librato.com/posts/2012/10/embeddable-charts">Libratoの記事</a>を参照してください．</p>

<h3>Fluentdの例</h3>

<p>Fluentdには<a href="https://github.com/treasure-data/fluent-plugin-metricsense">fluent-plugin-metricsense</a>というプラグインがあって，これは保存先にLibrato Metricsが使えたりします．
これはクライアント使ってないけど，<a href="https://github.com/treasure-data/fluent-plugin-metricsense/blob/master/lib/fluent/plugin/backends/librato_backend.rb">こんな感じで</a>，直接APIを呼ぶくらいなら簡単に実装できます．</p>

<h1>その他</h1>

<h2>料金</h2>

<p><a href="https://metrics.librato.com/pricing">料金ページ</a>を見てください．基本的にはデータの流量(これはLibrato側での保存ベース)，メトリックスの数，ソースの数，が影響します．<br />
簡単に言うと，どれだけの頻度でどれだけの数のメトリックスを作るか，です．</p>

<h2>サポート</h2>

<p>料金ページにも載ってますが，オンラインチャットとメールとコールがあります．うちではOlarkを使ってますが，最近のスタートアップではこの手のオンラインチャットでの対応というのが広まりつつあって良い感じ．<br />
緊急を要したり深いディスカッションが必要であれば，コールすることになるかなと．うちでも少し困ったことがあったので，コールして直接要望出したり設計を相談したりしました．</p>

<h1>まとめ</h1>

<p>AnnotationとかCRRELATEとか紹介してないのもありますが，Libartoの基本的な所を書いた．自分達でモニタリング環境を構築出来るなら良いんですが，スタートアップとかだとそこにリソースを割くのが難しかったりするので，そういう所はLibratoとか検討してみてもいいんじゃないかと思います．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ElasticSearch勉強会 第1回]]></title>
    <link href="http://repeatedly.github.com/ja/2013/08/elasticsearch-meetup-1st/"/>
    <updated>2013-08-31T17:21:00+09:00</updated>
    <id>http://repeatedly.github.com/ja/2013/08/elasticsearch-meetup-1st</id>
    <content type="html"><![CDATA[<p>8/29日に行われた<a href="http://atnd.org/event/E0018616">ElasticSearch勉強会 第1回</a>に参加してました．ElasticSearchは前々から興味はあったけど，仕事とかで使うこともないのでずっと放置という状態だった． <br />
<a href="http://blog.johtani.info/blog/2013/08/30/hold-first-elasticsearch-meetup-in-japan/">主催者の方のブログ</a>に各発表スライドへのリンクとかあるので，興味がある方はそちらを参照．</p>

<p>発表を聞いて思ったのは，Solrよりも後発なのもあり，運用とかエコシステムの構築に関して，かなり頑張っているなという印象．REST APIでの簡単な操作はもちろんのこと，運用で使えるexplainやelasticsearch-headなど，色々とやりやすそう． <br />
懸念点であるパフォーマンスに関しても，最後のニコ動を使った発表を見るに，かなり改善されて来ているようだ．</p>

<p>インデックスのsharding周りが少し気になっていて，文書IDをユーザが指定できるらしいので，その時のshardの割り当てとかどうやってんのかな，と． <br />
shardの数は途中で変更出来ないらしく，増やしたい時は別のクラスタを使ってjoinみたいなことするようなんだけど，それはそれで重そう．ここはjohtaniさんが調べてくれるらしいので，それを待ちたい所．</p>

<p>次会はCookpadの人がFluentd + ElasticSearch + Kibana3の事例とか話してくれるようなので，次のイベントが楽しみな所．
最近<a href="http://www.elasticsearch.org/overview/kibana/">Kibanaのページ</a>にもFluentdが載ったりしたので，今後も踏まえて実運用の話とか気になってます．</p>

<p>皆さん，お疲れ様でした！</p>
]]></content>
  </entry>
  
</feed>
