<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Go ahead!]]></title>
  <link href="http://repeatedly.github.com/atom.xml" rel="self"/>
  <link href="http://repeatedly.github.com/"/>
  <updated>2013-10-20T07:51:46+09:00</updated>
  <id>http://repeatedly.github.com/</id>
  <author>
    <name><![CDATA[Masahiro Nakagawa]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[D言語の現状]]></title>
    <link href="http://repeatedly.github.com/ja/2013/10/d-status-2013/"/>
    <updated>2013-10-20T00:43:00+09:00</updated>
    <id>http://repeatedly.github.com/ja/2013/10/d-status-2013</id>
    <content type="html"><![CDATA[<p><a href="http://japan.internet.com/webtech/20131018/5.html">「FacebookがプロダクションでD言語の利用を始めた」ことに関する記事</a>が少し話題になってます．で，これだけだとD言語が他の言語のようにプロダクションreadyと勘違いする方もいるかもしれないので，今の現状について書いておきます．</p>

<h2>この記事の一言まとめ</h2>

<p>手軽にプロダクションで使えるわけではありません！</p>

<p>詳細が知りたい方は以降をお読みください.</p>

<!-- more -->


<h2>今回の話</h2>

<p>FacebookのAndreiはTDPLという本を出した，D言語界隈でも主要なコミッタです．その一方，C++界隈でも有名な人物で，そういう人物がついにC++をやめてプロダクションでD言語を使った，というのが一つの大きなニュースです．</p>

<p>また，Facebookには<a href="http://qiita.com/yasei_no_otoko/items/17f672ec30393a2f928a">この記事</a>を書いたBenなど，D言語を使えるエンジニアが他にもいます．</p>

<h2>プロダクションでつかえるのか？</h2>

<p>簡単に言うと，「品質的には問題が無い，が今広まってる言語ほど楽ではない」です．JavaやRuby/Python/PHPなどWebで広く使われているような言語のように，たくさんのライブラリがある訳ではありません．</p>

<p>Dubというパッケージマネージャが最近出てきましたが，<a href="http://japan.internet.com/webtech/20131018/5.html">登録されているライブラリ</a>はまだ多くなく，なければ自分で書く必要があります．また，ライブラリにバグがあっても他の誰かが報告してくれるほどコミュニティも大きくないので，その辺も気をつける必要があります．まぁ大抵github/bitbucketなので，今時のエンジニアには楽だとは思いますが…</p>

<p>今プロダクションでD言語を使っている会社はFacebook以外にももちろんありますが(広告配信，ゲーム，社内システム，Webサーバなど)，そういう会社は大抵D言語でライブラリを書いてるような精通した人物が開発陣の中にいるのが現状です．まぁ，メジャーではない言語ではよくある光景だと思います．</p>

<p>プロダクション以外だと，研究とかでつかっている人は増えている感じがします．数値計算系，言語処理系，自然言語処理系，などなど書きやすさとパフォーマンスのバランスで選ばれているようです．</p>

<h2>互換性</h2>

<p>D言語を使ってない方からよく「D言語は互換性を維持しないからクソだ」という意見を聞くのですが，これにはいくつか理由があります．</p>

<h3>シェアがない</h3>

<p>当たり前ですが，シェアがない言語が律儀に互換性を維持してリリースすることのメリットはほぼありません．ライブラリも多くない言語では，互換性がなくなって困るライブラリはほとんどなく，ライブラリ開発者もほとんどが言語仕様の議論に参加しているので，基本問題は起きません．</p>

<h3>コミュニティの方向性</h3>

<p>上と関わりがありますが，今コミュニティとして，互換性よりも言語を良くしよう，という流れの方が強いです．</p>

<ul>
<li>この機能あった方がライブラリとかアプリが書きやすい</li>
<li>新しい機能でよりよいAPIが出来たのでこっちに移行</li>
<li>この機能は誰も使ってないから削除</li>
<li>この機能使うとこういう危険なコードになるので削除</li>
</ul>


<p>みたいな．これは今後プロダクションでの利用が増え，「互換性は保った方がいいんじゃないか？」という開発者が増えれば，流れは変わると思います．この辺はPythonやScalaなど，今時の言語と同じような感じかなと． <br />
今後に備えて，「bug fixリリースも考慮した開発フロー・バージョニングにした方がいいんじゃないか？」という提案はあがったりしてます．</p>

<h3>開発の流れ</h3>

<p>現状はD2しかメジャーバージョンがないんですが(D1のメンテナンスは終了)，これが開発版/安定版みたいになってます．昔と違って</p>

<ul>
<li>リグレッションがあったらリリースしない</li>
<li>リリース前にβ版を公開してフィードバックを得る</li>
<li>削除/変更するAPIは数ヶ月以上前から警告が出る</li>
</ul>


<p>などなど利用者がいきなり非互換にぶち当たるようなことが起きないように配慮はされてます．D言語はコンパイル時にシンボルやシグネチャをチェック出来る機構があり，ライブラリ開発者としても，多少の変更があってもそれで対応出来てます．<br />
なので，互換性に関しては少し寛容なのかもしれません．</p>

<p>「D2に入れるには大きすぎるかもしれない変更はD3で議論しよう」という流れになってるので，D2で今後パラダイムに関わるような大きな変更は起きないとは思います．</p>

<h2>まとめ</h2>

<p>記事で言及されている通り，言語，ライブラリ，開発環境，などなど昔に比べて成熟してきているのは確かですが，ご利用は計画的に，というが本当の所です．<br />
ポジション的にはHaskellやGoに近い所にいて，メジャーとは言い切れないがパワーユーザが使っていて，コミュニティが大きくなりつつあるという感じです．Facebookはこれからも利用箇所を増やすでしょうし，海外では他の事例もちょくちょく出てきそうです．日本は…よく分からんですｗ</p>

<p>とはいえ，日本はアクティブなコミッタが3人いたりと，実はD言語をする環境としては恵まれていたりしてます．困ったら #dlang をつけてTwitterでつぶやくと，誰かが助けてくれるかもしれません．日本語情報については，<a href="https://twitter.com/repeatedly/status/391191903418322944">このtweet</a>を参考にしてください．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Librato Metrics introduction]]></title>
    <link href="http://repeatedly.github.com/ja/2013/09/librato-metrics-introduction/"/>
    <updated>2013-09-08T08:57:00+09:00</updated>
    <id>http://repeatedly.github.com/ja/2013/09/librato-metrics-introduction</id>
    <content type="html"><![CDATA[<p><a href="https://metrics.librato.com/">Librato Metrics</a>をうちではモニタリングに使ってるんですが，日本で全くと言って良いほど記事を見ないので，紹介記事を書いてみる．</p>

<h1>何が出来る？</h1>

<p>おおまかに分けて以下のようなことが出来る．</p>

<ul>
<li>メトリックスを作れる</li>
<li>メトリックスに対してアラートを設定出来る</li>
<li>ダッシュボードでメトリックスの一覧が見れる</li>
<li>JavaScript SDKを使って自分のサイトに埋め込むことが出来る</li>
<li>APIが提供されていて，いくつかの言語のクライアントがある</li>
</ul>


<p>以下それぞれ簡単な説明．</p>

<h2>メトリックス</h2>

<p>LibratoにはMetricというのがあり，これが最小の単位．Metricに監視したいメトリックスの値を入れていき，他のMetricと混ぜたりすることでモニタリングを行います．</p>

<p><img src="http://repeatedly.github.com/images/librato_metric_sample.png" title="&#34;Librato Metric sample&#34;" alt="&#34;Librato Metric sample&#34;"></p>

<p>上の例のように，一つのMetricに複数の軸の値を入れることが出来ます．これはソースと呼ばれていて，保存する時にsourceを指定すれば良いです．指定しなかったら&#8221;unassigned&#8221;みたいなsourceにまとめられます．<br />
後，右上にある時間を弄れば，そのレンジでグラフが表示されます．</p>

<p>左の欄に色々とグラフの設定内容があるので，必要であれば弄ります．&#8221;How should we aggregate your data over time?&#8221;の欄が少し大事で「どういう風にメトリックスを見るか」を指定できます(<a href="http://dev.librato.com/v1/post/metrics#gauge_specific">ここ</a>の説明参照)．</p>

<h3>Instrument</h3>

<p>Metricをまとめるのに，Instrumentというのがあります．ここで複数のMetricを重ねることで，関連のありそうなMetric同士を俯瞰出来るようになります．</p>

<p>単純なモニタリングだけだと，MetricとInstrumentが一対一になったりしてダッシュボードやJavaScript SDKでちょっと面倒だったりもします．</p>

<h2>アラート</h2>

<p><img src="http://repeatedly.github.com/images/librato_alert_sample.png" title="&#34;Librato Alert sample&#34;" alt="&#34;Librato Alert sample&#34;"></p>

<p>上の画像の左のカラムが例で，Metricの中でスレッショルドベースで指定出来ます．どこに飛ばすか設定出来るので，うちでは重要なメトリックスに関してはHipChatやPagerDutyなどに飛ばしてます．</p>

<p>複雑な条件設定や，Metricをまたいだアラートは出来ないので，そういうのが欲しい場合は自分達で頑張る必要があります．</p>

<h2>ダッシュボード</h2>

<p><img src="http://repeatedly.github.com/images/librato_dashboard_sample.png" title="&#34;Librato Dashboard Sample&#34;" alt="&#34;Librato Dashboard Sample&#34;"></p>

<p>これがダッシュボードの例です．実際はMetricじゃなくてInstrumentを並べてるんですが，こんな感じで表示出来ます．<br />
ダッシュボードはいくらでも作れるので，自分の見たい粒度で作って，必要なメトリックスを並べます．某社みたいに一つのダッシュボードに数千数万のメトリックスにならないよう気をつけましょう．</p>

<h2>API</h2>

<p><a href="http://dev.librato.com/v1/metrics">APIページ</a>にリストと説明が載ってます．いくつかの言語には<a href="https://github.com/librato">公式のクライアントライブラリ</a>があるので，使うと良いです．<br />
ただ，Ruby版とか試してもInstrument APIがなかったりと，まだまだサポートAPIにばらつきが多い印象．アプリケーションからガチで使うなら，自分でいくつか実装する必要があります．APIはREST + JSONなので，実装はそんなに難しくないです．</p>

<p><a href="http://dev.librato.com/v1/users">ユーザAPI</a>はまだβ機能なのか，使いたい場合はLibartoに連絡して，使えるようにしてもらう必要があるっぽいです．</p>

<h3>JavaScript SDK</h3>

<p><img src="http://repeatedly.github.com/images/librato_javascript_sdk_sample.png" title="&#34;Librato JavaScript SDK Sample&#34;" alt="&#34;Librato JavaScript SDK Sample&#34;"></p>

<p>こんな感じになります．好きなページに貼り付けることが出来るし，グラフは自動で更新されます．
どういうコードになるかは，<a href="http://blog.librato.com/posts/2012/10/embeddable-charts">Libratoの記事</a>を参照してください．</p>

<h3>Fluentdの例</h3>

<p>Fluentdには<a href="https://github.com/treasure-data/fluent-plugin-metricsense">fluent-plugin-metricsense</a>というプラグインがあって，これは保存先にLibrato Metricsが使えたりします．
これはクライアント使ってないけど，<a href="https://github.com/treasure-data/fluent-plugin-metricsense/blob/master/lib/fluent/plugin/backends/librato_backend.rb">こんな感じで</a>，直接APIを呼ぶくらいなら簡単に実装できます．</p>

<h1>その他</h1>

<h2>料金</h2>

<p><a href="https://metrics.librato.com/pricing">料金ページ</a>を見てください．基本的にはデータの流量(これはLibrato側での保存ベース)，メトリックスの数，ソースの数，が影響します．<br />
簡単に言うと，どれだけの頻度でどれだけの数のメトリックスを作るか，です．</p>

<h2>サポート</h2>

<p>料金ページにも載ってますが，オンラインチャットとメールとコールがあります．うちではOlarkを使ってますが，最近のスタートアップではこの手のオンラインチャットでの対応というのが広まりつつあって良い感じ．<br />
緊急を要したり深いディスカッションが必要であれば，コールすることになるかなと．うちでも少し困ったことがあったので，コールして直接要望出したり設計を相談したりしました．</p>

<h1>まとめ</h1>

<p>AnnotationとかCRRELATEとか紹介してないのもありますが，Libartoの基本的な所を書いた．自分達でモニタリング環境を構築出来るなら良いんですが，スタートアップとかだとそこにリソースを割くのが難しかったりするので，そういう所はLibratoとか検討してみてもいいんじゃないかと思います．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ElasticSearch勉強会 第1回]]></title>
    <link href="http://repeatedly.github.com/ja/2013/08/elasticsearch-meetup-1st/"/>
    <updated>2013-08-31T17:21:00+09:00</updated>
    <id>http://repeatedly.github.com/ja/2013/08/elasticsearch-meetup-1st</id>
    <content type="html"><![CDATA[<p>8/29日に行われた<a href="http://atnd.org/event/E0018616">ElasticSearch勉強会 第1回</a>に参加してました．ElasticSearchは前々から興味はあったけど，仕事とかで使うこともないのでずっと放置という状態だった． <br />
<a href="http://blog.johtani.info/blog/2013/08/30/hold-first-elasticsearch-meetup-in-japan/">主催者の方のブログ</a>に各発表スライドへのリンクとかあるので，興味がある方はそちらを参照．</p>

<p>発表を聞いて思ったのは，Solrよりも後発なのもあり，運用とかエコシステムの構築に関して，かなり頑張っているなという印象．REST APIでの簡単な操作はもちろんのこと，運用で使えるexplainやelasticsearch-headなど，色々とやりやすそう． <br />
懸念点であるパフォーマンスに関しても，最後のニコ動を使った発表を見るに，かなり改善されて来ているようだ．</p>

<p>インデックスのsharding周りが少し気になっていて，文書IDをユーザが指定できるらしいので，その時のshardの割り当てとかどうやってんのかな，と． <br />
shardの数は途中で変更出来ないらしく，増やしたい時は別のクラスタを使ってjoinみたいなことするようなんだけど，それはそれで重そう．ここはjohtaniさんが調べてくれるらしいので，それを待ちたい所．</p>

<p>次会はCookpadの人がFluentd + ElasticSearch + Kibana3の事例とか話してくれるようなので，次のイベントが楽しみな所．
最近<a href="http://www.elasticsearch.org/overview/kibana/">Kibanaのページ</a>にもFluentdが載ったりしたので，今後も踏まえて実運用の話とか気になってます．</p>

<p>皆さん，お疲れ様でした！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[July Tech Festa 2013]]></title>
    <link href="http://repeatedly.github.com/ja/2013/07/july-tech-festa-2013/"/>
    <updated>2013-07-20T04:54:00+09:00</updated>
    <id>http://repeatedly.github.com/ja/2013/07/july-tech-festa-2013</id>
    <content type="html"><![CDATA[<p><a href="http://www.techfesta.jp/">July Tech Festa 2013</a>というイベントが7月14日にAIITで行われ，基調講演として呼ばれたので，<a href="http://www.techfesta.jp/p/program-2.html#A01">Treasure Dataとして発表</a>してきました．
<a href="http://www.techfesta.jp/2013/07/jtf2013_16.html">Best Speakerにも選んで頂き</a>，ありがとうございます．</p>

<h3>Slideshare</h3>

<iframe src="http://www.slideshare.net/slideshow/embed_code/24213160?rel=0" width="427" height="356" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC;border-width:1px 1px 0;margin-bottom:5px" allowfullscreen webkitallowfullscreen mozallowfullscreen> </iframe>


<p> <div style="margin-bottom:5px"> <strong> <a href="http://www.slideshare.net/treasure-data/treasure-data-cloud-strategy" title="Treasure Data Cloud Strategy" target="_blank">Treasure Data Cloud Strategy</a> </strong> from <strong><a href="http://www.slideshare.net/treasure-data" target="_blank">Treasure Data, Inc.</a></strong> </div></p>

<h3>Togetter</h3>

<ul>
<li><a href="http://togetter.com/li/533842">JTF全体</a></li>
<li><a href="http://togetter.com/li/534105">自分の発表のみ</a></li>
</ul>


<p>CTOから無茶ぶりされて「まぁいいか」と承諾したら実は基調講演だったというオチでした．他の発表者の人達がChefやOpenStackなどのいわゆるクラウドやDevOpsプロダクトの中，サービスであるTreasure Dataに講演依頼が来たということは，そういうことなんだろうなと上記の構成になりました．</p>

<p>Treasure Dataのサービスそのものやアーキテクチャに関しては，記事やイベントでぱらぱらと説明はしたものの，おそらくまとまった発表したのは今回が初めてだったんじゃないかなと思っています．こういう場を用意して頂いたJTFの方達には感謝です．</p>

<p>Togetterにまとめられているのを見て貰えれば分かるのですが</p>

<ul>
<li>なぜクラウドでやっているのか</li>
<li>システム構築で気をつけていること</li>
<li>どう運用しているか</li>
</ul>


<p>の辺りを大まかに話しました．僕らはスタートアップということもあり速度がとても重要なので，自分達のビジョンを達成するためにどういう選択をしてきたかと，その考え方について一通り述べたつもりです．</p>

<p>懇親会でも色々な方と話すことが出来て，運用で使っているツール周り話したり，実はFluentd使ってるんですよという人にも会えたり，Treasure Dataのようなサービス検討中なんです，などなど色々と楽しい時間を過ごせました．
Fluentdなんかはプラグイン機構でガンガンインフラの人にもコード書いて問題を解決してもらおうというプロダクトだったりするので，今後もユーザが増えるといいなという思います．</p>

<p>参加された方々，またスタッフの方々，お疲れ様でした！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[プログラミング言語D]]></title>
    <link href="http://repeatedly.github.com/ja/2013/05/tdpl-japanese-edition/"/>
    <updated>2013-05-13T01:44:00+09:00</updated>
    <id>http://repeatedly.github.com/ja/2013/05/tdpl-japanese-edition</id>
    <content type="html"><![CDATA[<p><a href="http://forum.dlang.org/thread/ttyydpzuhtpgxagkynhq@forum.dlang.org">フォーラム</a>にポストしてブログで書くの忘れてました！</p>

<p><img src="http://repeatedly.github.com/images/tdpl_jp_edition.png" title="&#34;TDPL Japanese Edition&#34;" alt="&#34;TDPL Japanese Edition&#34;"></p>

<ul>
<li><a href="http://books.shoeisha.co.jp/book/b108222.html">プログラミング言語D</a></li>
<li><a href="http://www.shoeisha.co.jp/book/qa/15615/list">正誤表</a> : 誤字や誤訳などあれば，こちらから報告してもらえると助かります</li>
</ul>


<p>Andreiが書いたD言語本，通称<a href="http://erdani.com/index.php/books/tdpl/">TDPL</a>の日本語版が翔泳社さんから出版されました．俺と原さんが監訳者として参加してました．<br />
翻訳された長尾さんの訳の質も高く，監訳のチェックは技術的なものに注力出来ました．</p>

<p>最初に断っておくと，TDPLはD言語の本であって入門本ではありません．
ある程度，他の言語を触っていてプログラミングに関して知っていることが前提になっています．</p>

<p>その変わりと言っては何ですが，単なる文法の説明などにとどまらず「なぜD言語がこの機能を採用したのか」
なども書かれている本になっています．そのため，それなりに読み応えのある本だと思います．<br />
また，Andreiのノリ？が極力残るように勤めました．</p>

<p>TDPL自体は2010年出版ですが，最新のバージョンである2.062までの変更はちゃんとフォローしています．
モジュール名含めコードも一部新しくなってますし，新機能に関してはコラムなどで説明しています．<br />
もし何か疑問などあれば，Twitterならば #dlang つけて呟くと，親切なD言語erが答えてくれると思います．</p>

<p>この本が出版されたことで，一つ肩の荷が下りたかなという感じです．
D言語を始める始めないに関わらず，どういう言語なのかを知って貰える一冊なのは確かです．</p>

<p>Enjoy D！</p>

<h2>P.S.</h2>

<p>恒例のアレなリンクです．すでに1ヶ月経ってますが，こちらから買ってもらえると俺が喜びます :)</p>

<p><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4798131105/repeatedly-22/ref=nosim/">Amazon</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[D Conference 2013]]></title>
    <link href="http://repeatedly.github.com/2013/05/d-conference-2013/"/>
    <updated>2013-05-03T13:00:00+09:00</updated>
    <id>http://repeatedly.github.com/2013/05/d-conference-2013</id>
    <content type="html"><![CDATA[<p>Got Walter and Andrei autograph in our TDPL japanese edition :)</p>

<p><img src="http://repeatedly.github.com/images/walter_autograph_tdpl.png" title="&#34;Walter sign&#34;" alt="&#34;Walter sign&#34;">
<img src="http://repeatedly.github.com/images/andrei_autograph_tdpl.png" title="&#34;Andrei sign&#34;" alt="&#34;Andrei sign&#34;">
<img src="http://repeatedly.github.com/images/dconf_2013_shirt.png" title="&#34;DConf 2013 T shirt&#34;" alt="&#34;DConf 2013 T shirt&#34;"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Search event logs using Fluentd and Kibana]]></title>
    <link href="http://repeatedly.github.com/2013/04/search-logs-using-fluentd-and-kibana/"/>
    <updated>2013-04-17T00:12:00+09:00</updated>
    <id>http://repeatedly.github.com/2013/04/search-logs-using-fluentd-and-kibana</id>
    <content type="html"><![CDATA[<p><a href="http://fluentd.org/">Fluentd</a> is a flexible and robust event log collector, but Fluentd doesn&#8217;t provide own datastore and Web UI.
So if you want to search the event logs collected by Fluentd, then you can use Kibana and ElasticSearch :)</p>

<p><a href="http://www.elasticsearch.org/">ElasticSearch</a> is a easy to use Search Engine and <a href="http://kibana.org/">Kibana</a> is a great Web UI for ElasticSearch with <a href="http://logstash.net/">LogStash</a> format.</p>

<h2>Setup</h2>

<h3>Pre requirements</h3>

<ul>
<li>Java for ElasticSearch</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>% java -version
</span><span class='line'>java version <span class="s2">&quot;1.6.0_45&quot;</span>
</span><span class='line'>Java<span class="o">(</span>TM<span class="o">)</span> SE Runtime Environment <span class="o">(</span>build 1.6.0_45-b06-451-11M4406<span class="o">)</span>
</span><span class='line'>Java HotSpot<span class="o">(</span>TM<span class="o">)</span> 64-Bit Server VM <span class="o">(</span>build 20.45-b01-451, mixed mode<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Ruby for Fluentd and Kibana</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>% ruby --version
</span><span class='line'>ruby 1.9.3p385 <span class="o">(</span>2013-02-06 revision 39114<span class="o">)</span> <span class="o">[</span>x86_64-darwin12.2.1<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>I tested on Mac OSX Mountain Lion.</p>

<h3>ElasticSearch</h3>

<p>Downlod and extract package:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>% curl -O https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-0.90.0.RC2.tar.gz
</span><span class='line'>% tar zxvf elasticsearch-0.90.0.RC2.tar.gz
</span><span class='line'>% <span class="nb">cd </span>elasticsearch-0.90.0.RC2/
</span></code></pre></td></tr></table></div></figure>


<p>Start ElasticSearch:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>% ./bin/elasticsearch -f
</span><span class='line'><span class="o">[</span>2013-04-16 23:55:46,212<span class="o">][</span>INFO <span class="o">][</span>node                     <span class="o">]</span> <span class="o">[</span>Redeemer<span class="o">]</span> <span class="o">{</span> 0.90.0.RC2<span class="o">}[</span>9307<span class="o">]</span>: initializing ...
</span><span class='line'><span class="o">[</span>2013-04-16 23:55:46,217<span class="o">][</span>INFO <span class="o">][</span>plugins                  <span class="o">]</span> <span class="o">[</span>Redeemer<span class="o">]</span> loaded <span class="o">[]</span>, sites <span class="o">[]</span>
</span><span class='line'><span class="o">[</span>2013-04-16 23:55:47,742<span class="o">][</span>INFO <span class="o">][</span>node                     <span class="o">]</span> <span class="o">[</span>Redeemer<span class="o">]</span> <span class="o">{</span> 0.90.0.RC2<span class="o">}[</span>9307<span class="o">]</span>: initialized
</span><span class='line'><span class="o">[</span>2013-04-16 23:55:47,742<span class="o">][</span>INFO <span class="o">][</span>node                     <span class="o">]</span> <span class="o">[</span>Redeemer<span class="o">]</span> <span class="o">{</span> 0.90.0.RC2<span class="o">}[</span>9307<span class="o">]</span>: starting ...
</span><span class='line'><span class="o">[</span>2013-04-16 23:55:47,810<span class="o">][</span>INFO <span class="o">][</span>transport                <span class="o">]</span> <span class="o">[</span>Redeemer<span class="o">]</span> bound_address <span class="o">{</span> inet<span class="o">[</span>/0:0:0:0:0:0:0:0%0:9300<span class="o">]}</span>, publish_address <span class="o">{</span> inet<span class="o">[</span>/192.168.1.51:9300<span class="o">]}</span>
</span><span class='line'><span class="o">[</span>2013-04-16 23:55:50,853<span class="o">][</span>INFO <span class="o">][</span>cluster.service          <span class="o">]</span> <span class="o">[</span>Redeemer<span class="o">]</span> new_master <span class="o">[</span>Redeemer<span class="o">][</span>YTfatlm2SyC4CsCsmnXX2A<span class="o">][</span>inet<span class="o">[</span>/192.168.1.51:9300<span class="o">]]</span>, reason: zen-disco-join <span class="o">(</span>elected_as_master<span class="o">)</span>
</span><span class='line'><span class="o">[</span>2013-04-16 23:55:50,888<span class="o">][</span>INFO <span class="o">][</span>discovery                <span class="o">]</span> <span class="o">[</span>Redeemer<span class="o">]</span> elasticsearch/YTfatlm2SyC4CsCsmnXX2A
</span><span class='line'><span class="o">[</span>2013-04-16 23:55:50,898<span class="o">][</span>INFO <span class="o">][</span>http                     <span class="o">]</span> <span class="o">[</span>Redeemer<span class="o">]</span> bound_address <span class="o">{</span> inet<span class="o">[</span>/0:0:0:0:0:0:0:0%0:9200<span class="o">]}</span>, publish_address <span class="o">{</span> inet<span class="o">[</span>/192.168.1.51:9200<span class="o">]}</span>
</span><span class='line'><span class="o">[</span>2013-04-16 23:55:50,898<span class="o">][</span>INFO <span class="o">][</span>node                     <span class="o">]</span> <span class="o">[</span>Redeemer<span class="o">]</span> <span class="o">{</span> 0.90.0.RC2<span class="o">}[</span>9307<span class="o">]</span>: started
</span><span class='line'><span class="o">[</span>2013-04-16 23:55:50,928<span class="o">][</span>INFO <span class="o">][</span>gateway                  <span class="o">]</span> <span class="o">[</span>Redeemer<span class="o">]</span> recovered <span class="o">[</span>0<span class="o">]</span> indices into cluster_state
</span></code></pre></td></tr></table></div></figure>


<h3>Kibana</h3>

<p>Download via <a href="http://kibana.org/intro.html">webpage</a> or clone repository from github.
Kibana is a Sinatra application.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>% git clone git://github.com/rashidkpc/Kibana.git
</span><span class='line'>% <span class="nb">cd </span>Kibana
</span><span class='line'>% bundle install --path vendor/bundle <span class="c"># &quot;gem install bundle&quot; is needed if you don&#39;t install bundle</span>
</span></code></pre></td></tr></table></div></figure>


<p>Start Kibana:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>% bundle <span class="nb">exec </span>ruby kibana.rb
</span><span class='line'> <span class="o">==</span>  Sinatra/1.4.2 has taken the stage on 5601 <span class="k">for </span>development with backup from <span class="nv">Thin</span>
</span><span class='line'> <span class="o">=</span>&gt;  Thin web server <span class="o">(</span>v1.5.1 codename Straight Razor<span class="o">)</span>
</span><span class='line'> <span class="o">=</span>&gt;  Maximum connections <span class="nb">set </span>to <span class="nv">1024</span>
</span><span class='line'> <span class="o">=</span>&gt;  Listening on 127.0.0.1:5601, CTRL+C to stop
</span></code></pre></td></tr></table></div></figure>


<p>You can change Kibana configuration via <code>KibanaConfig.rb</code>.</p>

<h3>Fluentd</h3>

<p>Install Fluentd and <a href="https://github.com/uken/fluent-plugin-elasticsearch">ElasticSearch plugin</a>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>% gem install fluentd fluent-plugin-elasticsearch
</span></code></pre></td></tr></table></div></figure>


<p>Fluentd configuration is below:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='apache'><span class='line'><span class="c"># es.conf</span>
</span><span class='line'><span class="nt">&lt;source&gt;</span>
</span><span class='line'>  <span class="nb">type</span> forward
</span><span class='line'><span class="nt">&lt;/source&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;match</span> <span class="s">es.**</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nb">type</span> elasticsearch
</span><span class='line'>  <span class="err">logstash_</span><span class="nb">format</span> true
</span><span class='line'>  <span class="err">flush_</span><span class="nb">interval</span> <span class="m">10</span>s # for testing
</span><span class='line'><span class="nt">&lt;/match&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>fluent-plugin-elasticsearch provides <code>logstash_format</code> option.
It enables Kibana to search stored event logs in ElasticSearch.</p>

<p>Start Fluentd:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>% fluentd -c es.conf
</span><span class='line'>2013-04-17 00:03:51 -0700 <span class="o">[</span>info<span class="o">]</span>: starting fluentd-0.10.33
</span><span class='line'>2013-04-17 00:03:51 -0700 <span class="o">[</span>info<span class="o">]</span>: reading config file <span class="nv">path</span> <span class="o">=</span> <span class="s2">&quot;es.conf&quot;</span>
</span><span class='line'>2013-04-17 00:03:51 -0700 <span class="o">[</span>info<span class="o">]</span>: using configuration file: &lt;ROOT&gt;
</span><span class='line'>  &lt;<span class="nb">source</span>&gt;
</span><span class='line'>    <span class="nb">type </span>forward
</span><span class='line'>  &lt;/source&gt;
</span><span class='line'>  &lt;match es.**&gt;
</span><span class='line'>    <span class="nb">type </span>elasticsearch
</span><span class='line'>    logstash_format <span class="nb">true</span>
</span><span class='line'><span class="nb">    </span>flush_interval 10s
</span><span class='line'>  &lt;/match&gt;
</span><span class='line'>&lt;/ROOT&gt;
</span><span class='line'>2013-04-17 00:03:51 -0700 <span class="o">[</span>info<span class="o">]</span>: adding <span class="nb">source type</span> <span class="o">=</span> <span class="s2">&quot;forward&quot;</span>
</span><span class='line'>2013-04-17 00:03:51 -0700 <span class="o">[</span>info<span class="o">]</span>: adding match <span class="nv">pattern</span> <span class="o">=</span> <span class="s2">&quot;es.**&quot;</span> <span class="nb">type</span> <span class="o">=</span> <span class="s2">&quot;elasticsearch&quot;</span>
</span><span class='line'>2013-04-17 00:03:51 -0700 <span class="o">[</span>info<span class="o">]</span>: listening fluent socket on 0.0.0.0:24224
</span></code></pre></td></tr></table></div></figure>


<h2>Store and Search event logs</h2>

<p>Send some events to Fluentd.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>% <span class="nb">echo</span> <span class="s1">&#39;{&quot;message&quot;:&quot;Hello!&quot;}&#39;</span> | fluent-cat es.event
</span><span class='line'>% <span class="nb">echo</span> <span class="s1">&#39;{&quot;message&quot;:&quot;D&quot;}&#39;</span> | fluent-cat es.event
</span><span class='line'>% <span class="nb">echo</span> <span class="s1">&#39;{&quot;message&quot;:&quot;Ruby&quot;}&#39;</span> | fluent-cat es.event
</span><span class='line'>% <span class="nb">echo</span> <span class="s1">&#39;{&quot;message&quot;:&quot;Elastic!!&quot;}&#39;</span> | fluent-cat es.event
</span></code></pre></td></tr></table></div></figure>


<p>After Fluentd flushed received events to ElasticSearch, you can search the stored event logs via Kibana!</p>

<p><img src="http://repeatedly.github.com/images/kibana_and_fluentd.png" title="&#34;Kibana and Fluentd&#34;" alt="&#34;Kibana and Fluentd&#34;"></p>

<h2>Conclusion</h2>

<p>This article introduced Fluent and Kibana (with ElasticSearch) combination to search event logs.
Above example is no tuning. If you use these components in production, then
maybe need to modify some configurations (e.g. JVM, ElasticSearch, Fluentd buffer and etc).</p>

<p>But these components are easy to setup and work fine. So you can try this framework soon :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Stormをはじめよう]]></title>
    <link href="http://repeatedly.github.com/ja/2013/03/getting-started-with-storm/"/>
    <updated>2013-03-30T10:54:00+09:00</updated>
    <id>http://repeatedly.github.com/ja/2013/03/getting-started-with-storm</id>
    <content type="html"><![CDATA[<p>O&#8217;Reillyの方から<a href="http://www.oreilly.co.jp/books/9784873116013/">Stormをはじめよう</a>を献本して頂いて読んだのでレビュー！</p>

<h2>感想</h2>

<p>最近増えてきている100ページくらいの本なので，さっくり読めました．</p>

<p>簡単にまとめると &#8221;<strong>英語は読みたくないので情報が古くてもStormの概要を日本語で読みたい</strong>&#8221; という方向けの本．</p>

<p>大きな理由は以下:</p>

<ul>
<li>Stormの対象バージョンが0.7.1と古い．俺でもTridentというのが0.8から入っているのを知っているので，その辺の目玉機能は書かれていない</li>
<li>多分原著の方も少し書き方が雑．なんの説明もなく実装のクラス名を使って説明している所とかあるので「？」となる所がある

<ul>
<li>サンプルコードも少し雑で，使ってない変数があったり説明と実装があってなかったりもたまにある</li>
</ul>
</li>
<li>翻訳が少し微妙．Cursorが&#8221;カーサー&#8221;だったり，原著の方の構成の不味さもあるのか，日本語的に理解しにくい文がちょくちょく混じっている (監訳はいない？)</li>
</ul>


<p>メッセージングの信頼性に関しては，Storm本家のWikiの方が詳しく書かれていたりするので，本当に「Stormってどういう構成でどういう感じに機能追加するんだろう？ユースケースとかは？」みたいなのを日本語で読みたい場合には，とっかかりにもなるし，これで十分な感じ．</p>

<p>英語が読める人は，本家のWikiとか漁った方が情報も新しく結構細かに書かれているため，そちらの方が正確かもしれない．</p>

<h2>正誤表</h2>

<p>読んでて気になった所はgistにまとめておきました</p>

<p><a href="https://gist.github.com/repeatedly/5274873">Stormをはじめようのerrata</a></p>

<h2>Stormについてのてきとうな所感</h2>

<ul>
<li><p>NimbusはImpalaのstatestoreみたいな感じで，最初はいるけど落ちても致命的ではない</p></li>
<li><p>Tupleは基本単体で送られて，それぞれにトポロジーのack tracker(Acker)がついてトラッキングされる</p>

<ul>
<li>tupleが増えるとAckerも増え，数が増えると結構重そうに見えるけど，そこんところどうなのか</li>
<li>再送は基本Spoutが判断．まぁこれは分からなくもない</li>
</ul>
</li>
<li><p>0.8からのTridentはBatchをガリガリ使っていると聞いてるけど，通常の利用だとあまりない？ 1 Tupleでトポロジー内forwardしまくるのは結構パフォーマンス的に厳しそう</p></li>
<li><p>トランザクションはSpout / Boltの両方が頑張る．この辺は今時のストリーミング処理系と同じ．コアで担保は難しい</p></li>
<li><p>各ワーカーのコアのメソッドはシングルスレッドで呼ばれるようなので，この辺で重い処理すると多分詰まる．at-least-onceっぽいので，多分これが連鎖するとデータ重複する．</p></li>
<li><p>multilangはHadoop Streamingと同じ</p></li>
<li><p>ZooKeeperに依存しているので，そこがまた面倒くさそう</p></li>
</ul>


<p>とりあえずこんな感じ．0.8や0.9でもっと改善されているかもしれないので，その辺は必要があれば追う．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AWSを使ったデータ解析PaaSの裏側]]></title>
    <link href="http://repeatedly.github.com/ja/2013/03/the-architecture-of-data-analytics-paas-on-aws-jaws-days-2013-day2/"/>
    <updated>2013-03-18T16:11:00+09:00</updated>
    <id>http://repeatedly.github.com/ja/2013/03/the-architecture-of-data-analytics-paas-on-aws-jaws-days-2013-day2</id>
    <content type="html"><![CDATA[<p><a href="http://jaws-ug.jp/jawsdays2013/">JAWS DAYS 2013</a>というイベントがあって，2日目に<a href="http://jaws-ug.jp/jawsdays2013/speaker.html#DEV-01">Treasure Dataとして発表</a>してきました．実は1日目には弊社CTOが<a href="http://jaws-ug.jp/jawsdays2013/speaker.html#PD-02">パネルディスカッションに登壇</a>したりしてました．</p>

<ul>
<li>Slideshare</li>
</ul>


<iframe src="http://www.slideshare.net/slideshow/embed_code/17252380?rel=0" width="427" height="356" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC;border-width:1px 1px 0;margin-bottom:5px" allowfullscreen webkitallowfullscreen mozallowfullscreen> </iframe>


<p> <div style="margin-bottom:5px"> <strong> <a href="http://www.slideshare.net/treasure-data/the-architecture-ofdataanalyticspaasonaws" title="The architecture of data analytics PaaS on AWS" target="_blank">The architecture of data analytics PaaS on AWS</a> </strong> from <strong><a href="http://www.slideshare.net/treasure-data" target="_blank">Treasure Data, Inc.</a></strong> </div></p>

<ul>
<li>Ustream</li>
</ul>


<iframe width="480" height="302" src="http://www.ustream.tv/embed/recorded/30009634?v=3&amp;wmode=direct" scrolling="no" frameborder="0" style="border: 0px none transparent;">    </iframe>


<br /><a href="http://www.ustream.tv/" style="padding: 2px 0px 4px; width: 400px; background: #ffffff; display: block; color: #000000; font-weight: normal; font-size: 10px; text-decoration: underline; text-align: center;" target="_blank">Video streaming by Ustream</a>


<p>最初はfrsyukiが登壇予定に上がっていたんだけど，今彼はアメリカということで代打で役割が回ってきた，というのが発表の経緯．</p>

<p>なんかラベルが&#8221;Dev&#8221;と&#8221;Ops&#8221;という超大雑把なくくりで「AWSで&#8221;Dev&#8221;って何発表すれば…」という状態だったので，
AWS上で展開しているTreasure Dataサービスの仕組みについてつらつらと話しました．</p>

<p>AWSべったりな感じではなくて</p>

<ul>
<li>Treasure Dataのサービス内容と目的</li>
<li>どうAWSのプロダクトを使っているのか</li>
<li>なぜこのAWSのサービスを使わないのか</li>
</ul>


<p>というのを大まかに話しました．仕組みの部分はどちらかというと一般的な設計の話になったかなという感じです．<br />
会場だったトラックBの席はほぼ満席で，発表の後の質疑応答も時間いっぱい掛かったので，個人的にはかなり嬉しい結果でした．</p>

<p>発表の後の時間や懇親会などで，すでにTreasure Dataを使っている人や，Fluentdを導入している人達とも交流出来，楽しい時間を過ごせました．これから導入しようかな，と考えている人もおられたので，何か問題があれば是非相談して頂ければなぁという感じです．<br />
AWSのMilesにも「Fluentd is good!!」と言われ，向こうでも徐々にFluentdが広まってきていると感じている今日この頃．このままTreasure Dataも伸びていきたい所です．</p>

<p>各セッションの感想は他の人が書いてくれるはず．ということで，皆さんお疲れ様でした！またどこかでお会いしましょう :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The basics of Fluentd]]></title>
    <link href="http://repeatedly.github.com/2013/03/the-basics-of-fluentd/"/>
    <updated>2013-03-09T13:54:00+09:00</updated>
    <id>http://repeatedly.github.com/2013/03/the-basics-of-fluentd</id>
    <content type="html"><![CDATA[<p>On Mar. 7th, Fluentd meetup in Fukuoka was held at OnRAMP.</p>

<p><a href="http://www.zusaar.com/event/501053">Fluentd meetup in Fukuoka</a> (in japanese)</p>

<p>In this event, I presented <strong>The basics of Fluentd</strong>.
The purpose of presentation shares Fluentd concept and basic features. I hope this presentation helps your understading of Fluentd.</p>

<iframe src="http://www.slideshare.net/slideshow/embed_code/17001359?rel=0" width="427" height="356" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC;border-width:1px 1px 0;margin-bottom:5px" allowfullscreen webkitallowfullscreen mozallowfullscreen> </iframe>


<p> <div style="margin-bottom:5px"> <strong> <a href="http://www.slideshare.net/treasure-data/the-basics-of-fluentd" title="The basics of fluentd" target="_blank">The basics of fluentd</a> </strong> from <strong><a href="http://www.slideshare.net/treasure-data" target="_blank">Treasure Data, Inc.</a></strong> </div></p>

<p>Thanks to matsuzaki-san and hashimoto-san for meetup setup and
thank you everyone for your participation!</p>

<p>I had a great time at Fukuoka :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LTSV for D]]></title>
    <link href="http://repeatedly.github.com/2013/02/ltsv-for-d/"/>
    <updated>2013-02-10T04:10:00+09:00</updated>
    <id>http://repeatedly.github.com/2013/02/ltsv-for-d</id>
    <content type="html"><![CDATA[<p>In this week, Shinji Tanaka announced <a href="http://ltsv.org/">Labeled Tab-separated Values (LTSV)</a>.
LTSV is the flexible and robust row oriented format.</p>

<p>I just implemented ltsv-d for D programming language.</p>

<p><a href="http://github.com/repeatedly/ltsv-d">LTSV for D</a></p>

<p>ltsv-d provides <code>fromLTSV</code> and <code>toLTSV</code> functions.</p>

<p><code>fromLTSV</code> for parsing:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='d'><span class='line'><span class="k">auto</span> <span class="n">apacheLog</span> <span class="p">=</span> <span class="s">&quot;host:127.0.0.1\tident:-\tuser:foo\ttime:[10/Oct/2000:13:55:36 -0700]\treq:GET /apache.gif HTTP/1.0\tstatus:200\tsize:777\treferer:http://www.example.com/start.html\tua:Mozilla/4.08 [en] (Win98; I ;Nav)&quot;</span><span class="p">;</span>
</span><span class='line'><span class="k">auto</span> <span class="n">record</span> <span class="p">=</span> <span class="n">fromLTSV</span><span class="p">(</span><span class="n">apacheLog</span><span class="p">);</span>
</span><span class='line'><span class="n">writeln</span><span class="p">(</span><span class="n">record</span><span class="p">[</span><span class="s">&quot;host&quot;</span><span class="p">]);</span> <span class="c1">// &quot;127.0.0.1&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>toLTSV</code> for dumping:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='d'><span class='line'><span class="k">auto</span> <span class="n">line</span> <span class="p">=</span> <span class="p">[</span><span class="s">&quot;foo&quot;</span><span class="p">:</span><span class="s">&quot;bar&quot;</span><span class="p">,</span> <span class="s">&quot;hoge&quot;</span><span class="p">:</span><span class="s">&quot;fuga&quot;</span><span class="p">,</span> <span class="s">&quot;piyo&quot;</span><span class="p">:</span><span class="s">&quot;puyo&quot;</span><span class="p">].</span><span class="n">toLTSV</span><span class="p">();</span>
</span><span class='line'><span class="n">writeln</span><span class="p">(</span><span class="n">line</span><span class="p">);</span> <span class="c1">// &quot;foo:bar\thoge:fuga\tpiyo:puyo&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Enjoy LTSV!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hadoop Conference Japan 2013 Winter]]></title>
    <link href="http://repeatedly.github.com/2013/01/hadoop-conference-japan-2013-winter/"/>
    <updated>2013-01-22T18:09:00+09:00</updated>
    <id>http://repeatedly.github.com/2013/01/hadoop-conference-japan-2013-winter</id>
    <content type="html"><![CDATA[<p>We are Hive Logo Lovers!</p>

<p><img src="http://repeatedly.github.com/images/hive_in_hcj13w.jpg" title="&#34;Original Hive T shirt&#34;" alt="&#34;Original Hive T shirt&#34;"></p>

<p>Event Link: <a href="http://hcj2013w.eventbrite.com/">Hadoop Conference Japan 2013 Winter</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[yajl-d]]></title>
    <link href="http://repeatedly.github.com/2013/01/yajl-d/"/>
    <updated>2013-01-20T05:27:00+09:00</updated>
    <id>http://repeatedly.github.com/2013/01/yajl-d</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/repeatedly/yajl-d">yajl-d</a> is the D binding for <a href="http://lloyd.github.com/yajl/">YAJL</a>.</p>

<p>YAJL provides the stream JSON parsing and some extra features, e.g. allow comments.</p>

<p>yajl-d also provides the JSON encoding and stream decoding.
yajl-d is 2 - 3 times faster than std.json (try simple benchmark in example directory).</p>

<p>Following code is basic form:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='d'><span class='line'><span class="k">import</span> <span class="n">yajl</span><span class="p">.</span><span class="n">yajl</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// yajl-d can serialize / deserialize D object.</span>
</span><span class='line'><span class="k">struct</span> <span class="n">Hoge</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">ulong</span> <span class="n">id</span><span class="p">;</span>
</span><span class='line'>    <span class="nb">string</span> <span class="n">word</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">bool</span> <span class="n">yes</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// {&quot;id&quot;:100,&quot;word&quot;:&quot;hey!&quot;,&quot;yes&quot;:true}</span>
</span><span class='line'><span class="n">Hoge</span> <span class="n">hoge1</span> <span class="p">=</span> <span class="n">Hoge</span><span class="p">(</span><span class="mi">100</span><span class="p">,</span> <span class="s">&quot;hey!&quot;</span><span class="p">,</span> <span class="kc">true</span><span class="p">);</span>
</span><span class='line'><span class="n">Hoge</span> <span class="n">hoge2</span> <span class="p">=</span> <span class="n">decode</span><span class="p">!</span><span class="n">Hoge</span><span class="p">(</span><span class="n">encode</span><span class="p">(</span><span class="n">hoge1</span><span class="p">));</span>
</span><span class='line'><span class="k">assert</span><span class="p">(</span><span class="n">hoge1</span> <span class="p">==</span> <span class="n">hoge2</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>encode</code> and <code>decode</code> are the wrapper of <code>Encoder</code> and <code>Decoder</code>. If you want to know more details of <code>Encoder</code> and <code>Decoder</code>. See README and the DDoc.</p>

<p>yajl-d has already listed in the official site.
Thanks to Lloyd!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Published 'Introduction to Tornado' in Japan]]></title>
    <link href="http://repeatedly.github.com/2012/12/published-introduction-to-tornado-in-japan/"/>
    <updated>2012-12-25T03:59:00+09:00</updated>
    <id>http://repeatedly.github.com/2012/12/published-introduction-to-tornado-in-japan</id>
    <content type="html"><![CDATA[<p>In the last week, O&#8217;Reilly Japan published <a href="http://www.oreilly.co.jp/books/9784873115764/">&#8220;概説Tornado&#8221;</a>.
This is the Japanese translation of <a href="http://shop.oreilly.com/product/0636920021292.do">&#8220;Introduction to Tornado&#8221;</a>.</p>

<p>I joined the team as a translation supervisor.
Thanks to team members and original authors for the good work.</p>

<p><a href="http://www.tornadoweb.org/">Tornado</a> is a great product in Python.
I use Tornado for the production proxy server and MessagePack RPC backend.
Tornado has clear API, clean code and good performance.
I think Tornado is good for learning Python and event driven programming.</p>

<p>I hope this book helps your Tornado experience.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[siphash-d]]></title>
    <link href="http://repeatedly.github.com/2012/12/siphash-d/"/>
    <updated>2012-12-04T22:57:00+09:00</updated>
    <id>http://repeatedly.github.com/2012/12/siphash-d</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/repeatedly/siphash-d">siphash-d</a> is the D implementation of <a href="https://131002.net/siphash/">SipHash</a>.</p>

<p>The latest CRuby uses SipHash to prevent <a href="http://www.ruby-lang.org/en/news/2012/11/09/ruby19-hashdos-cve-2012-5371/">Hash-flooding DoS attack</a>. From now on, SipHash like algorithm will be important for robust application. So I implemented SipHash for D.</p>

<p>Current version provides only siphash24 function:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='d'><span class='line'><span class="k">import</span> <span class="n">siphash</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">ubyte</span><span class="p">[</span><span class="mi">16</span><span class="p">]</span> <span class="n">k</span> <span class="p">=</span> <span class="k">cast</span><span class="p">(</span><span class="kt">ubyte</span><span class="p">[])</span><span class="s">&quot;To be|not to be!&quot;</span><span class="p">;</span>
</span><span class='line'><span class="kt">ubyte</span><span class="p">[]</span> <span class="n">msg</span> <span class="p">=</span> <span class="k">cast</span><span class="p">(</span><span class="kt">ubyte</span><span class="p">[])</span><span class="s">&quot;that is the question.&quot;</span><span class="p">;</span>
</span><span class='line'><span class="k">auto</span> <span class="n">hashed</span> <span class="p">=</span> <span class="n">siphash24</span><span class="p">(</span><span class="n">k</span><span class="p">,</span> <span class="n">msg</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>I plan to add std.digest like struct and other APIs if needed.</p>

<p>siphash-d has already listed in the official site.
Thanks to JP Aumasson!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Inside Impala Coordinator at HSCR 13th]]></title>
    <link href="http://repeatedly.github.com/2012/11/inside-impala-coordinator-at-hscr-13th/"/>
    <updated>2012-11-27T14:30:00+09:00</updated>
    <id>http://repeatedly.github.com/2012/11/inside-impala-coordinator-at-hscr-13th</id>
    <content type="html"><![CDATA[<p>Yesterday, I talked about Impala Coordinator, which is scheduler layer of query execution.</p>

<p>My presentation document is <a href="https://gist.github.com/4147497">here</a>!</p>

<p>And <a href="http://twitter.com/oza_x86">@oza_x86</a> also talked about Impala Internal, but he focused on Query Execution Engine.
The rest important component is only Query Planner.
I hope someone presents Query Planner Internal at next event :)</p>

<p><a href="http://twitter.com/GedowFather">@GedowFather</a> presented <a href="http://www.slideshare.net/GedowFather/cloudera-impala">Impala testing and operations on production</a>(ja).
This presentation shared the knowledge and application consideration.
I think this presentation is testbed for Impala introduction.</p>

<p>Thanks to Hadoop User Group Japan for the good event!</p>

<h2>Links</h2>

<ul>
<li><a href="http://hadoop-scr13th.eventbrite.com/">Event page</a> (ja)</li>
<li><a href="http://togetter.com/li/413784">Togetter</a> (ja)</li>
</ul>


<!-- more -->


<p>P.S.</p>

<p>Currently, Impala doesn&#8217;t have a mascot or logo. @GedowFather produced the following image.
I think this image is good candidate ;)</p>

<p><img src="http://blog.father.gedow.net/wp-content/uploads/2012/11/ImpalaQL.png" alt="ImpalaQL" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Change The Game]]></title>
    <link href="http://repeatedly.github.com/ja/2012/11/change-the-game/"/>
    <updated>2012-11-01T00:00:00+09:00</updated>
    <id>http://repeatedly.github.com/ja/2012/11/change-the-game</id>
    <content type="html"><![CDATA[<p>知ってる人はもう知っているとは思いますが，10月をもって1年と10ヶ月勤めた謎のベンチャー<a href="http://preferred.jp/">Preferred Infrastructure, Inc</a>を去りました．PFIの方々，本当に有り難うございました！<br />
エントリを書けと色々な人に脅されているので，てきとうに書きます．</p>

<!-- more -->


<h2>環境</h2>

<p>インターンで飛び込み，そのテンションのまま大学を辞めて入社．俺みたいな機械学習や情報検索の基礎すらなかった人間が，今では機械学習プロジェクトで開発をやっていたわけですから，岡野原さんを筆頭に本当濃い社員の人達には感謝しかありません．<br />
学習の高速道路という言葉がありますが，間違いなく超高速，時には事故るんじゃないかという環境でした．右を見ても左を見ても怪物だらけであるこの魔窟で，エンジニアとして勤めることが出来たのは本当に良い経験でした．</p>

<p>俺が入社した時は正社員は15人くらいだった気がしますが，今では既に26人で，もう30人を越えそうです．人やプロジェクトが増えた時，成長する速度を落とさずより攻めるにはどうすべきかという，そういう変化の中に入れたことも良かったと思います．</p>

<p>Red Bull部，豆部，カタン部など，これらに参加出来なくなるのは若干悲しいですね…</p>

<h2>やってたこと</h2>

<p>俺は製品開発部にいたわけですが，今PFIが持っているプロジェクトSedue，Jubatus，Bazilに関わらせてもらいました．この辺，俺がやりやすいよう色々と調整をしてくれた久保田さんには本当に感謝しています．</p>

<h3><a href="http://preferred.jp/product/sedue/abstract/">Sedue</a></h3>

<p>検索エンジンであるSedueでは，設計からプロトタイピングを多くやらせてもらいました．といっても俺みたいな情報検索の新人がいきなり検索のコアを弄るというのは無理なので，新しいサブコンポーネント，プロキシサーバ，管理ツールなどなど，Sedueをより使いやすくするための開発をメインでやってました．<br />
今でもインストールスクリプトにインストール先を指定するpオプションを付けたのはGood catchだったと自信を持って言えます ;)</p>

<p>Sedueではオンプレミスのような製品の難しさと楽しさ，というのを学びました．俺の書いたコードが今でもお客さんの所で元気に走り続けているというのは嬉しいことです．</p>

<h3><a href="http://jubat.us/">Jubatus</a></h3>

<p>Jubatusでは開発そのものにはあんま関わって無くて，OSSとしてどうするかとか，クライアントの整備とか周辺でごそごそしてました(とくにスクリプティング言語書ける人が壊滅的にいなかった)．jubatus-python-clientの手書きmsgpack-rpcに見かねて，msgpack-rpc-pythonを実装したのも今では良い思い出です．</p>

<p>JubatusはNTTと共同開発しているもののOSSなので，皆さん興味がある人はどんどんコミットすると良いと思います．なんだかんだで開発者だと気づかないことってたくさんあるので，他の方からのフィードバックがあるとより洗練されます．C++ですけどね！ハハハ！</p>

<h3>Bazil</h3>

<p>Bazilに関しては初期の段階からリーンスタートアップ的に開発しようとメンバが集まり，合宿やったりお客さんから話を聴いたりしてプロジェクトを回していました．<br />
また，会社で初めてのプロジェクト制という試みもあり，かなりアクティブに動いていた気がします．最初はメインが3人(PSS，製品開発，R&amp;D)という小さかったBazilプロジェクトですが，pivotを重ねて，今ではPFIの3つのプロジェクトの一つにまで成長しました．</p>

<p>BazilはSedueともJubatusとも違う感じで展開しようということで，コアの機械学習サーバ以外にも色々と開発してます．サーバのAPIどうしようかとか，ここはどうやって可視化しようかとか，部門を越えてワイワイやってるのは楽しかったですね．<br />
最初から関わっていたこともあり，今離れるのが残念というのが正直な所です．ただちゃんと引き継ぎもしたので，今後Bazilがどうなるのか，外野からですが注目し続けます！</p>

<h2>次どうすんの？</h2>

<p>「あいつは一体何Dataに行くんだ？」とずっと皆さんもやもやしていたと思いますが，<a href="http://www.treasure-data.com/">Treasure Data</a>という謎のスタートアップに11月，つまり今日からjoinします．ここもPFIに負けず劣らず怪物うごめく場所なのでかなり楽しみで，そういう人たちが俺を選んでくれたというのは本当に有り難く，ガンガン突っ走りたいなと思います．「TDのDはD言語のD」と呼ばれる日も近い(嘘です)．<br />
Treasure Data本体はアメリカにあるんですが，活動は今までと同じ東京(南大沢ではない)で変わらんので，皆さんこれからもガンガン絡んでやってください．</p>

<p>自分でも予想外に早かったなと思います．しかし，自分を試せる面白いフィールドがあり，そのチャンスが目の前に来てしまったのだから仕方がありません．チャンスはとりあえず掴む，というスタイルで今までやってきたので，これもそういうことなんだと思ってます :)</p>

<p>PFIのrepeatedlyあらためTDのrepeatedlyとして，これからも皆さん宜しくお願いします．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mongoプラグインの仕様]]></title>
    <link href="http://repeatedly.github.com/ja/2012/10/fluent-plugin-mongo-spec/"/>
    <updated>2012-10-31T03:30:00+09:00</updated>
    <id>http://repeatedly.github.com/ja/2012/10/fluent-plugin-mongo-spec</id>
    <content type="html"><![CDATA[<p>分散パフォーマンステスト関係を書こうと思っていたんですが，よくよく考えたらMongoプラグインについて日本語でまともな記事を書いたことなかったので書きます．</p>

<p>このエントリは<a href="http://www.zusaar.com/event/415005">ウィークリーFluentdユースケースエントリリレー</a>の参加エントリです．</p>

<!-- more -->


<h1>概要</h1>

<p>Mongoプラグインは<a href="http://www.mongodb.org/">MongoDB</a>に対するInput/Outputプラグインを提供します．またユーティリティとして，MongoDBのcappedコレクションに対してtailを行うmongo-tailコマンドも付属しています．</p>

<p>リポジトリ: <a href="https://github.com/fluent/fluent-plugin-mongo">https://github.com/fluent/fluent-plugin-mongo</a></p>

<p>MongoDBは内部はBSONですが，API的にはJSONでやりとりしており，また明示的なスキーマもいらないため，Fluentd周辺では集計サーバやテンポラリサーバとして広く利用されています．
td-agentには既に同梱されているため，td-agentを利用している方は特別なインストールをすることなく使えます．</p>

<h1>Outputプラグイン</h1>

<p>Outputプラグインには3タイプ用意されています．</p>

<ul>
<li><strong>mongo</strong>: 単一のMongoDBに出力</li>
<li><strong>mongo_replset</strong>: レプリカセットで構築されているMongoDBに出力</li>
<li><strong>mongo_backup</strong>: ローカルのMongoDBに保存しつつ，他のプラグインを使って出力．利用者もほとんどいないため，今回は割愛．</li>
</ul>


<p>以降に設定含めもう少し詳しく書いて行きます</p>

<h2>mongo</h2>

<p>MongoDBにイベントを書き込みます．BufferedOutputを利用しているため，イベントをバッファリングし，フラッシュする時にバルクでMongoDBに書き込みます．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='aconf'><span class='line'><span class="nt">&lt;match</span> <span class="s">mongo.**</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nb">type</span> mongo
</span><span class='line'>
</span><span class='line'>  <span class="nb">database</span> fluentd
</span><span class='line'>  <span class="nb">collection</span> log
</span><span class='line'>  <span class="nb">host</span> host1
</span><span class='line'>  <span class="nb">port</span> <span class="m">10000</span>
</span><span class='line'><span class="nt">&lt;/match&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>これが基本的な設定の例です．この設定に対してApacheのログを読み込ませた場合には，例えば以下のようになります．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">$</span> <span class="nx">mongo</span> <span class="o">--</span><span class="nx">host</span> <span class="nx">host1</span> <span class="o">--</span><span class="nx">port</span> <span class="mi">10000</span>
</span><span class='line'><span class="o">&gt;</span> <span class="nx">use</span> <span class="nx">fluentd</span>
</span><span class='line'><span class="o">&gt;</span> <span class="nx">db</span><span class="p">.</span><span class="nx">log</span><span class="p">.</span><span class="nx">find</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span><span class="s2">&quot;host&quot;</span><span class="o">:</span> <span class="s2">&quot;127.0.0.1&quot;</span><span class="p">,</span> <span class="s2">&quot;method&quot;</span><span class="o">:</span> <span class="s2">&quot;GET&quot;</span><span class="p">,</span> <span class="s2">&quot;path&quot;</span><span class="o">:</span> <span class="s2">&quot;/&quot;</span><span class="p">,</span> <span class="s2">&quot;code&quot;</span><span class="o">:</span> <span class="s2">&quot;200&quot;</span><span class="p">,</span> <span class="p">...}</span>
</span><span class='line'><span class="p">...</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>database (必須)</li>
</ul>


<p>イベントを書き込むデータベース名を指定します．</p>

<ul>
<li>collection (デフォルト: untagged)</li>
</ul>


<p>イベントを書き込むコレクション名を指定します．</p>

<ul>
<li>host (デフォルト: localhost)</li>
</ul>


<p>書き込み先のMongoDBのホストを指定します．</p>

<ul>
<li>port (デフォルト: 27017)</li>
</ul>


<p>書き込み先のMongoDBのポートを指定します．</p>

<ul>
<li>バッファの設定</li>
</ul>


<p>BufferedOutputを使用しているため，バッファに関してもいくつか指定出来る項目があります．指定出来る項目については，公式ドキュメントの<a href="http://fluentd.org/doc/plugin.html#buffered-output-plugins">バッファプラグイン</a>を見てください．</p>

<ul>
<li>ミックスイン</li>
</ul>


<p>SetTagKeyMixinとSetTimeKeyMixinの二つを利用しています．そのため，この設定も利用出来ます．</p>

<h3>認証</h3>

<p>MongoDBのユーザ認証を使うようにします．以下のように <em>user</em> と <em>password</em> を設定に書きます．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='aconf'><span class='line'><span class="nt">&lt;match</span> <span class="s">mongo.**</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nb">type</span> mongo
</span><span class='line'>  <span class="c"># ...</span>
</span><span class='line'>
</span><span class='line'>  <span class="nb">user</span> handa
</span><span class='line'>  <span class="nb">password</span> shinobu
</span><span class='line'><span class="nt">&lt;/match&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>capped</h3>

<p>MongoDBの場合，出力先のコレクションに<a href="http://www.mongodb.org/display/DOCS/Capped+Collections">cappedコレクション</a>を使いたくなる時が結構あります．そのため，設定で指定することが出来ます．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='aconf'><span class='line'><span class="nt">&lt;match</span> <span class="s">mongo.**</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nb">type</span> mongo
</span><span class='line'>  <span class="c"># ...</span>
</span><span class='line'>
</span><span class='line'>  <span class="nb">capped</span>
</span><span class='line'>  capped_max  <span class="m">100</span>
</span><span class='line'>  <span class="err">capped_</span><span class="nb">size</span> <span class="m">100</span>m
</span><span class='line'><span class="nt">&lt;/match&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>capped</li>
</ul>


<p>これを書くと作られるコレクションがcappedコレクションになります．この項目を指定した場合，以下の二つの設定が使用されます．</p>

<ul>
<li>capped_size (必須)</li>
</ul>


<p>cappedコレクションの容量を指定します．</p>

<ul>
<li>capped_max (オプション)</li>
</ul>


<p>cappedコレクションで保存出来るドキュメント数を指定します．</p>

<h3>tag_mapped</h3>

<p>MongoDBのようにコレクションが勝手に作られるデータベースを使っていると，Fluentdのタグに対応したそれぞれのコレクションに勝手に振り分けて保存したい時が出てきます．その時には <em>tag_mapped</em> を使います．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='aconf'><span class='line'><span class="nt">&lt;match</span> <span class="s">mongo.**</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nb">type</span> mongo
</span><span class='line'>  <span class="c">#...</span>
</span><span class='line'>
</span><span class='line'>  <span class="err">tag_</span><span class="nb">mapped</span>
</span><span class='line'>  remove_tag_prefix mongo.
</span><span class='line'><span class="nt">&lt;/match&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>tag_mapped</li>
</ul>


<p>これを書くとtag_mappedが有効になります．</p>

<ul>
<li>remove_tag_prefix</li>
</ul>


<p>タグからコレクション名を抽出する時に，この設定を元に整形します．指定された文字列でタグの先頭から正規表現マッチを行い，そのマッチした部分を削除します．</p>

<p>上記の例でmongo.fooというタグが来た場合， <em>remove_tag_prefix</em> がない場合にはmongo.fooというコレクションに書き込むが，&#8221;remove_tag_prefix mongo.&#8221;があった場合には&#8221;mongo.&#8221;が削除されfooというコレクションに書き込みます．</p>

<h2>mongo_replset</h2>

<p>MongoDBのレプリカセットにイベントを書き込みます．<strong>mongo_replset</strong> タイプは <strong>mongo</strong> タイプを継承して実装しているため， <em>database</em> や <em>tag_mapped</em> など，基本的な設定は <strong>mongo</strong> タイプを引き継ぎます．そのため，ここでは <strong>mongo_replset</strong> だけの設定に関して書きます</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='aconf'><span class='line'><span class="nt">&lt;match</span> <span class="s">mongo.**</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nb">type</span> mongo_replset
</span><span class='line'>  <span class="c">#...</span>
</span><span class='line'>
</span><span class='line'>  <span class="nb">nodes</span> host1:27017,host2:27018,host3:27019
</span><span class='line'>  <span class="err">num_</span><span class="nb">retries</span> <span class="m">30</span>
</span><span class='line'>
</span><span class='line'>  <span class="nb">name</span> replset_name
</span><span class='line'>  <span class="nb">read</span> secondary
</span><span class='line'>  <span class="err">refresh_</span><span class="nb">mode</span> sync
</span><span class='line'>  <span class="err">refresh_</span><span class="nb">interval</span> <span class="m">60</span>
</span><span class='line'><span class="nt">&lt;/match&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>nodes (必須)</li>
</ul>


<p><strong>mongo</strong> タイプではhost/portのペアを指定していましたが， <strong>mongo_replset</strong> タイプではレプリカセットのクラスタを指定します．現時点でFluentdは一つの設定項目に複数の値を指定する方法がないので，例のようにhost:portのリストを&#8217;,&#8217;で区切って指定します．</p>

<ul>
<li>num_retries (デフォルト: 60回)</li>
</ul>


<p>フェイルオーバーなどで一時的に繋がらない時に，何回リトライするかを指定します．この回数を超えた場合にプラグインは例外を投げます．</p>

<ul>
<li>name, read, refresh_mode, refresh_interval (全てオプション)</li>
</ul>


<p>これらはMongoクライアントのReplsetConnectionにそのまま渡されます．Rubyクライアントでの詳細は<a href="http://api.mongodb.org/ruby/1.6.4/Mongo/ReplSetConnection.html#initialize-instance_method">RDoc</a>や<a href="http://api.mongodb.org/ruby/current/file.REPLICA_SETS.html">レプリカセットの説明</a>を参照してください．</p>

<h1>Inputプラグイン</h1>

<p>Inputプラグインは今のところ <strong>mongo_tail</strong> タイプのみです．</p>

<h2>mongo_tail</h2>

<p>このInputプラグインは，in_tailと同じような動作をMongoDBのcappedコレクションに対して行います(通常のコレクションではソートされた状態で，位置を覚えて取得することが出来ないためです)．また，MongoDBから取得するドキュメントの&#8217;_id&#8217;フィールドの値はObjectIDになっておりJSONやMessagePackで扱えないため，&#8217;_id_str&#8217;フィールドに文字列としてセットされます．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='aconf'><span class='line'><span class="nt">&lt;source&gt;</span>
</span><span class='line'>  <span class="nb">type</span> mongo_tail
</span><span class='line'>
</span><span class='line'>  <span class="nb">database</span> fluentd
</span><span class='line'>  <span class="nb">collection</span> capped_log
</span><span class='line'>  <span class="nb">host</span> host1
</span><span class='line'>  <span class="nb">port</span> <span class="m">10000</span>
</span><span class='line'>
</span><span class='line'>  <span class="nb">tag</span> mongo.log
</span><span class='line'>  <span class="err">time_</span><span class="nb">key</span> time
</span><span class='line'>  <span class="err">id_store_</span><span class="nb">file</span> <span class="sx">/path/to/last_id</span>
</span><span class='line'><span class="nt">&lt;/source&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>tag (必須 or tag_keyがあるときはオプション)</li>
</ul>


<p>出力先のタグを指定する．<em>tag_key</em> が指定されていた場合には，そちらが優先される．</p>

<ul>
<li>tag_key (必須 or tagがあるときはオプション)</li>
</ul>


<p>入力のドキュメントから <em>tag_key</em> で指定されたフィールドの値を取得し，その値をイベントのタグとする．見つからない場合は&#8217;mongo.missing_tag&#8217;がタグとなる．</p>

<ul>
<li>time_key (オプション)</li>
</ul>


<p>入力のドキュメントから <em>time_key</em> で指定されたフィールドを取得し，イベントの時間とする．なければ入力を取得した時を，イベントの時間とする．</p>

<ul>
<li>id_store_file (オプション)</li>
</ul>


<p>最後に取得したドキュメントのObjectIDを保存し，tailのポジションを記憶する．再起動した場合にはこのObjectIDを元にtailを再開する．指定しない場合には保存せず，再起動したら再度末尾からtailするようになる．</p>

<ul>
<li>database, collection, host, port (必須，必須，デフォルト: localhost, デフォルト: 27017)</li>
</ul>


<p>Outputプラグインの <strong>mongo</strong> タイプと指定は同じですが， <em>collection</em> が必須になっている所が違います．</p>

<h2>認証</h2>

<p>Outputプラグインと同じです．</p>

<h1>気をつけること</h1>

<p>以下では利用する際に注意する所と，なんでそうなっているかを説明します．</p>

<h2>buffer_chunk_limitの制限</h2>

<p>mongoのOutputプラグインでは， <em>buffer_chunk_limit</em> に上限が設けられています．上限は</p>

<ul>
<li>MongoDBのバージョンが1.8未満だと2MB</li>
<li>MongoDBのバージョンが1.8以上だと10MB</li>
</ul>


<p>という感じに分けられています．これは，MongoDBで有名なドキュメント制限に由来しており，制限より大きなドキュメントや操作はクライアントやMongoDB本体で弾かれます．</p>

<p>ドキュメント制限ギリギリではない理由は，MessagePackとBSONのサイズの違いによります．JSONと較べるとMessagePackは小さくなる傾向にあり，BSONはあまり変わらないか少し大きくなる傾向にあります．特に整数などが項目に多いと顕著になるため，このように制限の約半分くらいにしています．しかしこれもヒューリスティックな制限であるため，実際のログの傾向などを調べて，適切な <em>buffer_chunk_limit</em> を指定する必要があります．</p>

<h2>コレクションの設定チェック</h2>

<p>今のところはcappedのチェックしかしてませんが，違う設定で既に存在しているコレクションに書き込もうとしていた場合には，以下のような例外を投げるようにしています．これは設定の使い回しなどで，うっかり誤ったコレクションに書き込むなどのミスを防ぐためにつけています．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="s2">&quot;New configuration is different from existing collection: new = foo, old = bar&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>また，tag_mappedの場合は現在細かな指定が出来ないため，デフォルトではこのチェックはしないようになっています．
この動作のon/offを切り替えるには <em>disable_collection_check</em> で指定します．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='aconf'><span class='line'><span class="nt">&lt;match</span> <span class="s">mongo.**</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="c">#...</span>
</span><span class='line'>  <span class="err">disable_collection_</span><span class="nb">check</span> true
</span><span class='line'><span class="nt">&lt;/match&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>壊れているドキュメントの扱い</h2>

<p>様々なアプリケーションのログをFluentdに流し込んでいると，たまにBSONとしてシリアライズ出来ないログが混じったりすることがあります(文字コードが壊れている，MongoDBとしてInvalidなフォーマットを持っている)．この場合に，Fluentdとしてはログを勝手に捨てることは出来ません．なので，mongoのOutputプラグインでは，そのようなログはバイナリにしてMongoDBに保存するようにしています．
例えば以下のようなログが来たとします:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="p">{</span><span class="s2">&quot;key1&quot;</span><span class="o">:</span> <span class="s2">&quot;invalid value&quot;</span><span class="p">,</span> <span class="s2">&quot;key2&quot;</span><span class="o">:</span> <span class="s2">&quot;valid value&quot;</span><span class="p">,</span> <span class="s2">&quot;time&quot;</span><span class="o">:</span> <span class="nx">ISODate</span><span class="p">(</span><span class="s2">&quot;2012-01-15T21:09:53Z&quot;</span><span class="p">)</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>この時key1の値がBSONに出来ないので，その壊れているフィールドと，Mixinで特別扱いされるtimeなどのフィールドを除くその他のフィールドを丸ごとバイナリに変換します(なぜ丸ごとするのかというと，RubyのBSONライブラリが失敗したフィールドを教えてくれないからです)．その結果，以下のようなフォーマットになります．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="p">{</span><span class="s2">&quot;__broken_data&quot;</span><span class="o">:</span> <span class="nx">BinData</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="nx">Marshal</span><span class="p">.</span><span class="nx">dump</span> <span class="nx">result</span> <span class="nx">of</span> <span class="p">{</span><span class="s2">&quot;key1&quot;</span><span class="o">:</span> <span class="s2">&quot;invalid value&quot;</span><span class="p">,</span> <span class="s2">&quot;key2&quot;</span><span class="o">:</span> <span class="s2">&quot;valid value&quot;</span><span class="p">}),</span> <span class="s2">&quot;time&quot;</span><span class="o">:</span> <span class="nx">ISODate</span><span class="p">(</span><span class="s2">&quot;2012-01-15T21:09:53Z&quot;</span><span class="p">)</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>バイナリになった壊れたデータは&#8217;__broken_data&#8217;という特別なフィールドにセットされ，再度insertが行われます．後でこの壊れたデータをチェックしたい場合には，以下のようなRubyスクリプトでチェックすることが出来ます</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="n">collection</span><span class="o">.</span><span class="n">find</span><span class="p">({</span><span class="s1">&#39;__broken_data&#39;</span> <span class="o">=&gt;</span> <span class="p">{</span><span class="s1">&#39;$exists&#39;</span> <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">}})</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">doc</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">p</span> <span class="no">Marshal</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="n">doc</span><span class="o">[</span><span class="s1">&#39;__broken_data&#39;</span><span class="o">].</span><span class="n">to_s</span><span class="p">)</span> <span class="c1">#=&gt; {&quot;key1&quot;: &quot;invalid value&quot;, &quot;key2&quot;: &quot;valid value&quot;}</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>ここまで書いてなんですが，そもそもログの種類によっては壊れているものは捨てても良い場合があると思います．その時は， <em>ignore_invalid_record</em> を使うことで捨てることが出来ます</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='aconf'><span class='line'><span class="nt">&lt;match</span> <span class="s">mongo.**</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="c">#...</span>
</span><span class='line'>  <span class="err">ignore_invalid_</span><span class="nb">record</span> true
</span><span class='line'><span class="nt">&lt;/match&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>MongoDBそのものの制限</h2>

<p>これはプラグインではどうしもようないので，使う前にチェックしてください．</p>

<ul>
<li><a href="http://www.mongodb.org/display/DOCS/Legal+Key+Names">Legal Key Names</a></li>
<li><a href="http://docs.mongodb.org/manual/release-notes/2.2/#restrictions-on-collection-names">Restrictions on Collection Names</a></li>
</ul>


<h1>まとめ</h1>

<p>図を書く元気がなかったので文字が多くなりましたが，MongoDBをFluentdで使う時に利用出来るプラグインとその設定について書きました．MongoDBを使った事例に関してはスライドやブログが既にいくつかあるので，興味をある方は検索してみてください．</p>

<p>また，使っていてなんか不具合があった場合にはissueやpull requestをして頂ければと思います．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DConf 2013 on kickstarter!]]></title>
    <link href="http://repeatedly.github.com/2012/10/dconf-2013-on-kickstarter/"/>
    <updated>2012-10-29T08:30:00+09:00</updated>
    <id>http://repeatedly.github.com/2012/10/dconf-2013-on-kickstarter</id>
    <content type="html"><![CDATA[<p>Walter launched <a href="http://www.kickstarter.com/projects/2083649206/the-d-programming-language-conference-2013-0">&#8220;The D Programming Language Conference 2013&#8221; on kickstarter</a> in the last week.
I have already pledged, and total pledged now passed the 50% :)</p>

<p>Please pledge your support!</p>

<p>Forum: <a href="http://forum.dlang.org/thread/k63vi8$1qp0$1@digitalmars.com">DConf 2013 on kickstarter.com: we&#8217;re live!</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Released denv]]></title>
    <link href="http://repeatedly.github.com/2012/05/released-denv/"/>
    <updated>2012-05-14T06:47:00+09:00</updated>
    <id>http://repeatedly.github.com/2012/05/released-denv</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/repeatedly/denv">denv</a> is a D version of rbenv.</p>

<p>It enables you to manage multiple versions of D environment.<br />
See <a href="https://github.com/repeatedly/denv/blob/master/README.md">README</a> for more details.</p>

<ul>
<li><a href="http://forum.dlang.org/thread/fqcnqqphbfymgymnwqjx@forum.dlang.org">Announce at digitalmars.D.announce</a></li>
<li><a href="https://github.com/repeatedly/denv">denv for contest programming</a> (in Japanese)</li>
</ul>

]]></content>
  </entry>
  
</feed>
